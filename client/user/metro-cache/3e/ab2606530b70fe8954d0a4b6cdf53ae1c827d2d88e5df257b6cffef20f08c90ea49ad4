{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"haversine","data":{"isAsync":false}},{"name":"react-native-maps-directions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _reactNativeMaps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11], \"react-native-maps\"));\n\n  var _haversine = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"haversine\"));\n\n  var _reactNativeMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react-native-maps-directions\"));\n\n  var _jsxFileName = \"/home/kiruba/deliveride/client/user/components/Map.js\";\n  var _components = {\n    AnimatedMarkers: {\n      displayName: \"AnimatedMarkers\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/kiruba/deliveride/client/user/components/Map.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var LATITUDE = 12.9778894;\n  var LONGITUDE = 77.644986;\n  var LATITUDE_DELTA = 0.009;\n  var LONGITUDE_DELTA = 0.009;\n\n  var AnimatedMarkers = function (_React$Component) {\n    (0, _inherits2.default)(AnimatedMarkers, _React$Component);\n\n    function AnimatedMarkers(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedMarkers);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedMarkers).call(this, props));\n\n      _this.pickLocation = function (event) {\n        var coords = event.nativeEvent.coordinate;\n        var latitude = coords.latitude,\n            longitude = coords.longitude;\n\n        _this.map.animateToRegion((0, _objectSpread2.default)({}, _this.state.focusedLocation, {\n          latitude: latitude,\n          longitude: longitude\n        }));\n\n        _this.setState(function (state) {\n          return {\n            focusedLocation: (0, _objectSpread2.default)({}, state.focusedLocation, {\n              latitude: latitude,\n              longitude: longitude\n            }),\n            locationChosen: true\n          };\n        });\n      };\n\n      _this.getLocationHandler = function (event) {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          var coords = {\n            nativeEvent: {\n              coordinate: {\n                latitude: pos.coords.latitude,\n                longitude: pos.coords.longitude\n              }\n            }\n          };\n\n          _this.pickLocation(coords);\n        });\n      };\n\n      _this.calcDistance = function (newLatLng) {\n        var prevLatLng = _this.state.prevLatLng;\n        return (0, _haversine.default)(prevLatLng, newLatLng) || 0;\n      };\n\n      _this.getMapRegion = function () {\n        return {\n          latitude: _this.state.latitude,\n          longitude: _this.state.longitude,\n          latitudeDelta: LATITUDE_DELTA,\n          longitudeDelta: LONGITUDE_DELTA\n        };\n      };\n\n      _this.state = {\n        latitude: LATITUDE,\n        longitude: LONGITUDE,\n        routeCoordinates: [],\n        distanceTravelled: 0,\n        prevLatLng: {},\n        coordinate: new _reactNativeMaps.AnimatedRegion({\n          latitude: LATITUDE,\n          longitude: LONGITUDE\n        }),\n        focusedLocation: {\n          latitude: LATITUDE,\n          longitude: LONGITUDE,\n          latitudeDelta: 0.0122,\n          longitudeDelta: _reactNative.Dimensions.get(\"window\").width / _reactNative.Dimensions.get(\"window\").height * 0.0122\n        },\n        locationChosen: false,\n        temp: null\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedMarkers, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        navigator.geolocation.getCurrentPosition(function (position) {}, function (error) {\n          return alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      }\n    }, {\n      key: \"updateDriverLocation\",\n      value: function updateDriverLocation() {\n        var _this2 = this;\n\n        var coordinate = this.state.coordinate;\n        var coords = {\n          latitude: this.state.latitude,\n          longitude: this.state.longitude\n        };\n        this.props.socket.on('track-driver', function (data) {\n          console.log(\"reciverd new location\", data);\n          coords = data;\n\n          if (_reactNative.Platform.OS === \"android\") {\n            if (_this2.marker) {\n              coordinate.timing(coords).start();\n              console.log(\"updating locationn\");\n\n              _this2.props.socket.emit('location', coords);\n            }\n          } else {\n            coordinate.timing(data).start();\n          }\n        });\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this3 = this;\n\n        var coordinate = this.state.coordinate;\n        this.props.socket.on('track-driver', function (position) {\n          var _this3$state = _this3.state,\n              coordinate = _this3$state.coordinate,\n              routeCoordinates = _this3$state.routeCoordinates,\n              distanceTravelled = _this3$state.distanceTravelled;\n\n          if (position || true) {\n            var latitude = position.latitude,\n                longitude = position.longitude;\n            var newCoordinate = {\n              latitude: latitude,\n              longitude: longitude\n            };\n\n            _this3.setState((0, _objectSpread2.default)({}, _this3.state, {\n              temp: newCoordinate\n            }));\n\n            if (_this3.marker) {\n              coordinate.timing(newCoordinate).start();\n            }\n\n            _this3.setState({\n              latitude: latitude,\n              longitude: longitude,\n              routeCoordinates: routeCoordinates.concat([newCoordinate]),\n              distanceTravelled: distanceTravelled + _this3.calcDistance(newCoordinate),\n              prevLatLng: newCoordinate\n            });\n          } else {\n            console.log('position is null: ', position);\n          }\n        }, function (error) {\n          return console.log(error);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {}\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this4 = this;\n\n        var marker = null;\n\n        if (this.state.locationChosen) {\n          marker = _react.default.createElement(_reactNativeMaps.default.Marker, {\n            coordinate: this.state.focusedLocation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            }\n          });\n        }\n\n        var origin = {\n          latitude: LATITUDE,\n          longitude: LONGITUDE\n        };\n        var destination = {\n          latitude: 13.012766,\n          longitude: 77.699448\n        };\n        var GMapsApiKey = 'AIzaSyB1Q7pVw6rESQCcwqmlEp9mANh5NCDQBwE';\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          style: styles.map,\n          showUserLocation: true,\n          followUserLocation: true,\n          loadingEnabled: true,\n          region: this.getMapRegion(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          }\n        }, _react.default.createElement(_reactNativeMapsDirections.default, {\n          origin: origin,\n          destination: destination,\n          apikey: GMapsApiKey,\n          strokeWidth: 5,\n          strokeColor: '#f7b733',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          }\n        }), _react.default.createElement(_reactNativeMaps.Polyline, {\n          coordinates: this.state.routeCoordinates,\n          strokeWidth: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          }\n        }), _react.default.createElement(_reactNativeMaps.Marker.Animated, {\n          ref: function ref(marker) {\n            _this4.marker = marker;\n          },\n          coordinate: this.state.coordinate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: [styles.bubble, styles.button],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.bottomBarContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          }\n        }, parseFloat(this.state.distanceTravelled).toFixed(2), \" km\"))));\n      }\n    }]);\n    return AnimatedMarkers;\n  }(_react.default.Component);\n\n  AnimatedMarkers = _wrapComponent(\"AnimatedMarkers\")(AnimatedMarkers);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      justifyContent: \"flex-end\",\n      alignItems: \"center\"\n    }),\n    map: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),\n    bubble: {\n      flex: 1,\n      backgroundColor: \"rgba(255,255,255,0.7)\",\n      paddingHorizontal: 18,\n      paddingVertical: 12,\n      borderRadius: 20\n    },\n    latlng: {\n      width: 200,\n      alignItems: \"stretch\"\n    },\n    button: {\n      width: 80,\n      paddingHorizontal: 12,\n      alignItems: \"center\",\n      marginHorizontal: 10\n    },\n    buttonContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n      backgroundColor: \"transparent\"\n    }\n  });\n\n  var _default2 = AnimatedMarkers;\n  exports.default = _default2;\n});","map":[[23,0,1,0],[27,0,2,0],[29,0,11,0],[31,0,12,0],[33,0,13,0],[55,0,15,0],[55,6,15,6,"LATITUDE"],[55,14,15,14],[55,17,15,17],[55,27,15,0],[56,0,16,0],[56,6,16,6,"LONGITUDE"],[56,15,16,15],[56,18,16,18],[56,27,16,0],[57,0,17,0],[57,6,17,6,"LATITUDE_DELTA"],[57,20,17,20],[57,23,17,23],[57,28,17,0],[58,0,18,0],[58,6,18,6,"LONGITUDE_DELTA"],[58,21,18,21],[58,24,18,24],[58,29,18,0],[60,6,20,6,"AnimatedMarkers"],[60,21],[63,0,21,2],[63,29,21,14,"props"],[63,34,21,2],[63,36,21,21],[64,0,21,21],[66,0,21,21],[67,0,22,4],[67,119,22,10,"props"],[67,124,22,4],[69,0,21,21],[69,12,74,2,"pickLocation"],[69,24,21,21],[69,27,74,17],[69,37,74,17,"event"],[69,42,74,22],[69,44,74,25],[70,0,75,4],[70,12,75,10,"coords"],[70,18,75,16],[70,21,75,19,"event"],[70,26,75,24],[70,27,75,25,"nativeEvent"],[70,38,75,19],[70,39,75,37,"coordinate"],[70,49,75,4],[71,0,74,25],[71,12,76,11,"latitude"],[71,20,74,25],[71,23,76,33,"coords"],[71,29,74,25],[71,30,76,11,"latitude"],[71,38,74,25],[72,0,74,25],[72,12,76,20,"longitude"],[72,21,74,25],[72,24,76,33,"coords"],[72,30,74,25],[72,31,76,20,"longitude"],[72,40,74,25],[74,0,77,4],[74,14,77,9,"map"],[74,17,77,4],[74,18,77,13,"animateToRegion"],[74,33,77,4],[74,66,78,9],[74,72,78,14,"state"],[74,77,78,9],[74,78,78,20,"focusedLocation"],[74,93,77,4],[75,0,78,36,"latitude"],[75,10,78,36,"latitude"],[75,18,78,44],[75,20,78,45,"latitude"],[75,28,77,4],[76,0,78,54,"longitude"],[76,10,78,54,"longitude"],[76,19,78,63],[76,21,78,64,"longitude"],[77,0,77,4],[79,0,80,4],[79,14,80,9,"setState"],[79,22,80,4],[79,23,80,18],[79,33,80,18,"state"],[79,38,80,23],[79,40,80,25],[80,0,80,26],[80,17,80,32],[81,0,80,34,"focusedLocation"],[81,12,80,34,"focusedLocation"],[81,27,80,49],[81,61,80,54,"state"],[81,66,80,59],[81,67,80,60,"focusedLocation"],[81,82,80,49],[82,0,80,76,"latitude"],[82,14,80,76,"latitude"],[82,22,80,84],[82,24,80,85,"latitude"],[82,32,80,49],[83,0,80,94,"longitude"],[83,14,80,94,"longitude"],[83,23,80,103],[83,25,80,104,"longitude"],[84,0,80,49],[84,14,80,32],[85,0,80,115,"locationChosen"],[85,12,80,115,"locationChosen"],[85,26,80,129],[85,28,80,130],[86,0,80,32],[86,11,80,26],[87,0,80,137],[87,9,80,4],[88,0,82,3],[88,7,21,21],[90,0,21,21],[90,12,84,2,"getLocationHandler"],[90,30,21,21],[90,33,84,23],[90,43,84,24,"event"],[90,48,84,23],[90,50,84,33],[91,0,85,4,"navigator"],[91,8,85,4,"navigator"],[91,17,85,13],[91,18,85,14,"geolocation"],[91,29,85,4],[91,30,85,26,"getCurrentPosition"],[91,48,85,4],[91,49,85,45],[91,59,85,45,"pos"],[91,62,85,48],[91,64,85,50],[92,0,86,6],[92,14,86,12,"coords"],[92,20,86,18],[92,23,86,19],[93,0,87,8,"nativeEvent"],[93,12,87,8,"nativeEvent"],[93,23,87,19],[93,25,87,20],[94,0,88,10,"coordinate"],[94,14,88,10,"coordinate"],[94,24,88,20],[94,26,88,21],[95,0,88,22,"latitude"],[95,16,88,22,"latitude"],[95,24,88,30],[95,26,88,31,"pos"],[95,29,88,34],[95,30,88,35,"coords"],[95,36,88,31],[95,37,88,42,"latitude"],[95,45,88,21],[96,0,88,51,"longitude"],[96,16,88,51,"longitude"],[96,25,88,60],[96,27,88,61,"pos"],[96,30,88,64],[96,31,88,65,"coords"],[96,37,88,61],[96,38,88,72,"longitude"],[97,0,88,21],[98,0,87,20],[99,0,86,19],[99,11,86,6],[101,0,92,6],[101,16,92,11,"pickLocation"],[101,28,92,6],[101,29,92,24,"coords"],[101,35,92,6],[102,0,93,5],[102,9,85,4],[103,0,94,3],[103,7,21,21],[105,0,21,21],[105,12,140,2,"calcDistance"],[105,24,21,21],[105,27,140,17],[105,37,140,17,"newLatLng"],[105,46,140,26],[105,48,140,30],[106,0,140,30],[106,12,141,12,"prevLatLng"],[106,22,140,30],[106,25,141,27],[106,31,141,32,"state"],[106,36,140,30],[106,37,141,12,"prevLatLng"],[106,47,140,30],[107,0,142,4],[107,15,142,11],[107,39,142,21,"prevLatLng"],[107,49,142,11],[107,51,142,33,"newLatLng"],[107,60,142,11],[107,65,142,47],[107,66,142,4],[108,0,143,3],[108,7,21,21],[110,0,21,21],[110,12,145,2,"getMapRegion"],[110,24,21,21],[110,27,145,17],[111,0,145,17],[111,15,145,24],[112,0,146,4,"latitude"],[112,10,146,4,"latitude"],[112,18,146,12],[112,20,146,14],[112,26,146,19,"state"],[112,31,146,14],[112,32,146,25,"latitude"],[112,40,145,24],[113,0,147,4,"longitude"],[113,10,147,4,"longitude"],[113,19,147,13],[113,21,147,15],[113,27,147,20,"state"],[113,32,147,15],[113,33,147,26,"longitude"],[113,42,145,24],[114,0,148,4,"latitudeDelta"],[114,10,148,4,"latitudeDelta"],[114,23,148,17],[114,25,148,19,"LATITUDE_DELTA"],[114,39,145,24],[115,0,149,4,"longitudeDelta"],[115,10,149,4,"longitudeDelta"],[115,24,149,18],[115,26,149,20,"LONGITUDE_DELTA"],[116,0,145,24],[116,9,145,17],[117,0,145,17],[117,7,21,21],[119,0,24,4],[119,12,24,9,"state"],[119,17,24,4],[119,20,24,17],[120,0,25,6,"latitude"],[120,8,25,6,"latitude"],[120,16,25,14],[120,18,25,17,"LATITUDE"],[120,26,24,17],[121,0,26,6,"longitude"],[121,8,26,6,"longitude"],[121,17,26,15],[121,19,26,18,"LONGITUDE"],[121,28,24,17],[122,0,27,6,"routeCoordinates"],[122,8,27,6,"routeCoordinates"],[122,24,27,22],[122,26,27,24],[122,28,24,17],[123,0,28,6,"distanceTravelled"],[123,8,28,6,"distanceTravelled"],[123,25,28,23],[123,27,28,25],[123,28,24,17],[124,0,29,6,"prevLatLng"],[124,8,29,6,"prevLatLng"],[124,18,29,16],[124,20,29,18],[124,22,24,17],[125,0,30,6,"coordinate"],[125,8,30,6,"coordinate"],[125,18,30,16],[125,20,30,18],[125,24,30,22,"AnimatedRegion"],[125,55,30,18],[125,56,30,37],[126,0,31,8,"latitude"],[126,10,31,8,"latitude"],[126,18,31,16],[126,20,31,18,"LATITUDE"],[126,28,30,37],[127,0,32,8,"longitude"],[127,10,32,8,"longitude"],[127,19,32,17],[127,21,32,19,"LONGITUDE"],[128,0,30,37],[128,9,30,18],[128,10,24,17],[129,0,34,6,"focusedLocation"],[129,8,34,6,"focusedLocation"],[129,23,34,21],[129,25,34,22],[130,0,35,8,"latitude"],[130,10,35,8,"latitude"],[130,18,35,16],[130,20,35,17,"LATITUDE"],[130,28,34,22],[131,0,36,8,"longitude"],[131,10,36,8,"longitude"],[131,19,36,17],[131,21,36,18,"LONGITUDE"],[131,30,34,22],[132,0,37,8,"latitudeDelta"],[132,10,37,8,"latitudeDelta"],[132,23,37,21],[132,25,37,22],[132,31,34,22],[133,0,38,8,"longitudeDelta"],[133,10,38,8,"longitudeDelta"],[133,24,38,22],[133,26,38,23,"Dimensions"],[133,50,38,34,"get"],[133,53,38,23],[133,54,38,38],[133,62,38,23],[133,64,38,48,"width"],[133,69,38,23],[133,72,38,54,"Dimensions"],[133,96,38,65,"get"],[133,99,38,54],[133,100,38,69],[133,108,38,54],[133,110,38,79,"height"],[133,116,38,23],[133,119,38,86],[134,0,34,22],[134,9,24,17],[135,0,39,8,"locationChosen"],[135,8,39,8,"locationChosen"],[135,22,39,22],[135,24,39,23],[135,29,24,17],[136,0,40,6,"temp"],[136,8,40,6,"temp"],[136,12,40,10],[136,14,40,12],[137,0,24,17],[137,7,24,4],[138,0,21,21],[139,0,42,3],[143,43,44,23],[144,0,45,4,"navigator"],[144,8,45,4,"navigator"],[144,17,45,13],[144,18,45,14,"geolocation"],[144,29,45,4],[144,30,45,26,"getCurrentPosition"],[144,48,45,4],[144,49,46,6],[144,59,46,6,"position"],[144,67,46,14],[144,69,46,18],[144,70,46,20],[144,71,45,4],[144,73,47,6],[144,83,47,6,"error"],[144,88,47,11],[145,0,47,11],[145,17,47,15,"alert"],[145,22,47,20],[145,23,47,21,"error"],[145,28,47,26],[145,29,47,27,"message"],[145,36,47,20],[145,37,47,11],[146,0,47,11],[146,9,45,4],[146,11,48,6],[147,0,49,8,"enableHighAccuracy"],[147,10,49,8,"enableHighAccuracy"],[147,28,49,26],[147,30,49,28],[147,34,48,6],[148,0,50,8,"timeout"],[148,10,50,8,"timeout"],[148,17,50,15],[148,19,50,17],[148,24,48,6],[149,0,51,8,"maximumAge"],[149,10,51,8,"maximumAge"],[149,20,51,18],[149,22,51,20],[150,0,48,6],[150,9,45,4],[151,0,54,3],[154,45,56,24],[155,0,56,24],[157,0,56,24],[157,12,57,11,"coordinate"],[157,22,56,24],[157,25,57,25],[157,30,57,30,"state"],[157,35,56,24],[157,36,57,11,"coordinate"],[157,46,56,24],[158,0,58,4],[158,12,58,8,"coords"],[158,18,58,14],[158,21,58,17],[159,0,58,18,"latitude"],[159,10,58,18,"latitude"],[159,18,58,26],[159,20,58,27],[159,25,58,32,"state"],[159,30,58,27],[159,31,58,38,"latitude"],[159,39,58,17],[160,0,58,47,"longitude"],[160,10,58,47,"longitude"],[160,19,58,56],[160,21,58,57],[160,26,58,62,"state"],[160,31,58,57],[160,32,58,68,"longitude"],[161,0,58,17],[161,9,58,4],[162,0,59,4],[162,13,59,9,"props"],[162,18,59,4],[162,19,59,15,"socket"],[162,25,59,4],[162,26,59,22,"on"],[162,28,59,4],[162,29,59,25],[162,43,59,4],[162,45,59,40],[162,55,59,41,"data"],[162,59,59,40],[162,61,59,48],[163,0,60,6,"console"],[163,10,60,6,"console"],[163,17,60,13],[163,18,60,14,"log"],[163,21,60,6],[163,22,60,18],[163,45,60,6],[163,47,60,43,"data"],[163,51,60,6],[164,0,61,6,"coords"],[164,10,61,6,"coords"],[164,16,61,12],[164,19,61,15,"data"],[164,23,61,6],[166,0,62,6],[166,14,62,10,"Platform"],[166,36,62,19,"OS"],[166,38,62,10],[166,43,62,26],[166,52,62,6],[166,54,62,37],[167,0,63,8],[167,16,63,12],[167,22,63,16],[167,23,63,17,"marker"],[167,29,63,8],[167,31,63,25],[168,0,64,10,"coordinate"],[168,14,64,10,"coordinate"],[168,24,64,20],[168,25,64,21,"timing"],[168,31,64,10],[168,32,64,28,"coords"],[168,38,64,10],[168,40,64,36,"start"],[168,45,64,10],[169,0,65,10,"console"],[169,14,65,10,"console"],[169,21,65,17],[169,22,65,18,"log"],[169,25,65,10],[169,26,65,22],[169,46,65,10],[171,0,66,10],[171,14,66,10],[171,20,66,14],[171,21,66,15,"props"],[171,26,66,10],[171,27,66,21,"socket"],[171,33,66,10],[171,34,66,28,"emit"],[171,38,66,10],[171,39,66,33],[171,49,66,10],[171,51,66,45,"coords"],[171,57,66,10],[172,0,67,9],[173,0,68,7],[173,11,62,6],[173,17,68,13],[174,0,69,8,"coordinate"],[174,12,69,8,"coordinate"],[174,22,69,18],[174,23,69,19,"timing"],[174,29,69,8],[174,30,69,26,"data"],[174,34,69,8],[174,36,69,32,"start"],[174,41,69,8],[175,0,70,7],[176,0,71,5],[176,9,59,4],[177,0,72,3],[180,42,96,22],[181,0,96,22],[183,0,96,22],[183,12,97,12,"coordinate"],[183,22,96,22],[183,25,97,27],[183,30,97,32,"state"],[183,35,96,22],[183,36,97,12,"coordinate"],[183,46,96,22],[184,0,98,4],[184,13,98,9,"props"],[184,18,98,4],[184,19,98,15,"socket"],[184,25,98,4],[184,26,98,22,"on"],[184,28,98,4],[184,29,98,25],[184,43,98,4],[184,45,99,6],[184,55,99,7,"position"],[184,63,99,6],[184,65,99,20],[185,0,99,20],[185,29,100,68],[185,35,100,72],[185,36,100,73,"state"],[185,41,99,20],[186,0,99,20],[186,14,100,16,"coordinate"],[186,24,99,20],[186,40,100,16,"coordinate"],[186,50,99,20],[187,0,99,20],[187,14,100,28,"routeCoordinates"],[187,30,99,20],[187,46,100,28,"routeCoordinates"],[187,62,99,20],[188,0,99,20],[188,14,100,46,"distanceTravelled"],[188,31,99,20],[188,47,100,46,"distanceTravelled"],[188,64,99,20],[190,0,101,8],[190,14,101,11,"position"],[190,22,101,19],[190,26,101,23],[190,30,101,8],[190,32,101,29],[191,0,101,29],[191,16,102,18,"latitude"],[191,24,101,29],[191,27,102,42,"position"],[191,35,101,29],[191,36,102,18,"latitude"],[191,44,101,29],[192,0,101,29],[192,16,102,28,"longitude"],[192,25,101,29],[192,28,102,42,"position"],[192,36,101,29],[192,37,102,28,"longitude"],[192,46,101,29],[193,0,104,10],[193,16,104,16,"newCoordinate"],[193,29,104,29],[193,32,104,32],[194,0,105,12,"latitude"],[194,14,105,12,"latitude"],[194,22,105,20],[194,24,105,12,"latitude"],[194,32,104,32],[195,0,106,12,"longitude"],[195,14,106,12,"longitude"],[195,23,106,21],[195,25,106,12,"longitude"],[196,0,104,32],[196,13,104,10],[198,0,108,10],[198,12,108,10],[198,18,108,14],[198,19,108,15,"setState"],[198,27,108,10],[198,60,108,28],[198,66,108,32],[198,67,108,33,"state"],[198,72,108,10],[199,0,108,39,"temp"],[199,14,108,39,"temp"],[199,18,108,43],[199,20,108,44,"newCoordinate"],[200,0,108,10],[202,0,110,10],[202,16,110,14],[202,22,110,18],[202,23,110,19,"marker"],[202,29,110,10],[202,31,110,27],[203,0,116,12,"coordinate"],[203,14,116,12,"coordinate"],[203,24,116,22],[203,25,116,23,"timing"],[203,31,116,12],[203,32,116,30,"newCoordinate"],[203,45,116,12],[203,47,116,45,"start"],[203,52,116,12],[204,0,117,11],[206,0,119,10],[206,12,119,10],[206,18,119,14],[206,19,119,15,"setState"],[206,27,119,10],[206,28,119,24],[207,0,120,12,"latitude"],[207,14,120,12,"latitude"],[207,22,120,20],[207,24,120,12,"latitude"],[207,32,119,24],[208,0,121,12,"longitude"],[208,14,121,12,"longitude"],[208,23,121,21],[208,25,121,12,"longitude"],[208,34,119,24],[209,0,122,12,"routeCoordinates"],[209,14,122,12,"routeCoordinates"],[209,30,122,28],[209,32,122,30,"routeCoordinates"],[209,48,122,46],[209,49,122,47,"concat"],[209,55,122,30],[209,56,122,54],[209,57,122,55,"newCoordinate"],[209,70,122,54],[209,71,122,30],[209,72,119,24],[210,0,123,12,"distanceTravelled"],[210,14,123,12,"distanceTravelled"],[210,31,123,29],[210,33,124,14,"distanceTravelled"],[210,50,124,31],[210,53,124,34],[210,59,124,38],[210,60,124,39,"calcDistance"],[210,72,124,34],[210,73,124,52,"newCoordinate"],[210,86,124,34],[210,87,119,24],[211,0,125,12,"prevLatLng"],[211,14,125,12,"prevLatLng"],[211,24,125,22],[211,26,125,24,"newCoordinate"],[212,0,119,24],[212,13,119,10],[213,0,127,9],[213,11,101,8],[213,17,127,15],[214,0,128,10,"console"],[214,12,128,10,"console"],[214,19,128,17],[214,20,128,18,"log"],[214,23,128,10],[214,24,128,22],[214,44,128,10],[214,46,128,43,"position"],[214,54,128,10],[215,0,129,9],[216,0,130,7],[216,9,98,4],[216,11,131,6],[216,21,131,6,"error"],[216,26,131,11],[217,0,131,11],[217,17,131,15,"console"],[217,24,131,22],[217,25,131,23,"log"],[217,28,131,15],[217,29,131,27,"error"],[217,34,131,15],[217,35,131,11],[218,0,131,11],[218,9,98,4],[218,11,132,6],[219,0,132,8,"enableHighAccuracy"],[219,10,132,8,"enableHighAccuracy"],[219,28,132,26],[219,30,132,28],[219,34,132,6],[220,0,132,34,"timeout"],[220,10,132,34,"timeout"],[220,17,132,41],[220,19,132,43],[220,24,132,6],[221,0,132,50,"maximumAge"],[221,10,132,50,"maximumAge"],[221,20,132,60],[221,22,132,62],[222,0,132,6],[222,9,98,4],[223,0,134,3],[226,45,136,25],[226,46,138,3],[229,31,152,11],[230,0,152,11],[232,0,153,4],[232,12,153,8,"marker"],[232,18,153,14],[232,21,153,15],[232,25,153,4],[234,0,154,4],[234,12,154,7],[234,17,154,12,"state"],[234,22,154,7],[234,23,154,18,"locationChosen"],[234,37,154,4],[234,39,154,33],[235,0,155,6,"marker"],[235,10,155,6,"marker"],[235,16,155,12],[235,19,155,15],[235,48,155,16],[235,72,155,15],[235,73,155,24],[235,79,155,15],[236,0,155,31],[236,12,155,31],[236,22,155,41],[236,24,155,43],[236,29,155,48,"state"],[236,34,155,43],[236,35,155,54,"focusedLocation"],[236,50,155,15],[237,0,155,15],[238,0,155,15],[239,0,155,15],[240,0,155,15],[241,0,155,15],[241,12,155,6],[242,0,156,5],[244,0,157,4],[244,12,157,10,"origin"],[244,18,157,16],[244,21,157,19],[245,0,158,6,"latitude"],[245,10,158,6,"latitude"],[245,18,158,14],[245,20,158,16,"LATITUDE"],[245,28,157,19],[246,0,159,6,"longitude"],[246,10,159,6,"longitude"],[246,19,159,15],[246,21,159,17,"LONGITUDE"],[247,0,157,19],[247,9,157,4],[248,0,161,4],[248,12,161,10,"destination"],[248,23,161,21],[248,26,161,24],[249,0,162,6,"latitude"],[249,10,162,6,"latitude"],[249,18,162,14],[249,20,162,16],[249,29,161,24],[250,0,163,6,"longitude"],[250,10,163,6,"longitude"],[250,19,163,15],[250,21,163,17],[251,0,161,24],[251,9,161,4],[252,0,165,4],[252,12,165,10,"GMapsApiKey"],[252,23,165,21],[252,26,165,24],[252,67,165,4],[253,0,166,4],[253,15,167,6],[253,44,167,7],[253,61,167,6],[254,0,167,12],[254,10,167,12],[254,15,167,17],[254,17,167,19,"styles"],[254,23,167,25],[254,24,167,26,"container"],[254,33,167,6],[255,0,167,6],[256,0,167,6],[257,0,167,6],[258,0,167,6],[259,0,167,6],[259,11,168,8],[259,40,168,9],[259,64,168,8],[260,0,169,10],[260,10,169,10],[260,15,169,15],[260,17,169,17,"styles"],[260,23,169,23],[260,24,169,24,"map"],[260,27,168,8],[261,0,170,10],[261,10,170,10],[261,26,170,26],[261,32,168,8],[262,0,171,10],[262,10,171,10],[262,28,171,28],[262,34,168,8],[263,0,172,10],[263,10,172,10],[263,24,172,24],[263,30,168,8],[264,0,173,10],[264,10,173,10],[264,16,173,16],[264,18,173,18],[264,23,173,23,"getMapRegion"],[264,35,173,18],[264,37,168,8],[265,0,168,8],[266,0,168,8],[267,0,168,8],[268,0,168,8],[269,0,168,8],[269,11,174,10],[269,40,174,11],[269,74,174,10],[270,0,174,29],[270,10,174,29],[270,16,174,35],[270,18,174,37,"origin"],[270,24,174,10],[271,0,174,45],[271,10,174,45],[271,21,174,56],[271,23,174,58,"destination"],[271,34,174,10],[272,0,174,71],[272,10,174,71],[272,16,174,77],[272,18,174,79,"GMapsApiKey"],[272,29,174,10],[273,0,174,92],[273,10,174,92],[273,21,174,103],[273,23,174,105],[273,24,174,10],[274,0,174,108],[274,10,174,108],[274,21,174,119],[274,23,174,121],[274,32,174,10],[275,0,174,10],[276,0,174,10],[277,0,174,10],[278,0,174,10],[279,0,174,10],[279,10,168,8],[279,12,175,10],[279,41,175,11],[279,66,175,10],[280,0,175,20],[280,10,175,20],[280,21,175,31],[280,23,175,33],[280,28,175,38,"state"],[280,33,175,33],[280,34,175,44,"routeCoordinates"],[280,50,175,10],[281,0,175,62],[281,10,175,62],[281,21,175,73],[281,23,175,75],[281,24,175,10],[282,0,175,10],[283,0,175,10],[284,0,175,10],[285,0,175,10],[286,0,175,10],[286,10,168,8],[286,12,176,10],[286,41,176,11],[286,64,176,10],[286,65,176,18],[286,73,176,10],[287,0,177,12],[287,10,177,12],[287,13,177,15],[287,15,177,17],[287,28,177,17,"marker"],[287,34,177,23],[287,36,177,27],[288,0,178,14],[288,12,178,14],[288,18,178,18],[288,19,178,19,"marker"],[288,25,178,14],[288,28,178,28,"marker"],[288,34,178,14],[289,0,179,13],[289,11,176,10],[290,0,180,12],[290,10,180,12],[290,20,180,22],[290,22,180,24],[290,27,180,29,"state"],[290,32,180,24],[290,33,180,35,"coordinate"],[290,43,176,10],[291,0,176,10],[292,0,176,10],[293,0,176,10],[294,0,176,10],[295,0,176,10],[295,10,168,8],[295,11,167,6],[295,13,187,8],[295,42,187,9],[295,59,187,8],[296,0,187,14],[296,10,187,14],[296,15,187,19],[296,17,187,21,"styles"],[296,23,187,27],[296,24,187,28,"buttonContainer"],[296,39,187,8],[297,0,187,8],[298,0,187,8],[299,0,187,8],[300,0,187,8],[301,0,187,8],[301,11,188,10],[301,40,188,11],[301,69,188,10],[302,0,188,28],[302,10,188,28],[302,15,188,33],[302,17,188,35],[302,18,188,36,"styles"],[302,24,188,42],[302,25,188,43,"bubble"],[302,31,188,35],[302,33,188,51,"styles"],[302,39,188,57],[302,40,188,58,"button"],[302,46,188,35],[302,47,188,10],[303,0,188,10],[304,0,188,10],[305,0,188,10],[306,0,188,10],[307,0,188,10],[307,11,189,12],[307,40,189,13],[307,57,189,12],[308,0,189,18],[308,10,189,18],[308,15,189,23],[308,17,189,25,"styles"],[308,23,189,31],[308,24,189,32,"bottomBarContent"],[308,40,189,12],[309,0,189,12],[310,0,189,12],[311,0,189,12],[312,0,189,12],[313,0,189,12],[313,11,190,15,"parseFloat"],[313,21,190,25],[313,22,190,26],[313,27,190,31,"state"],[313,32,190,26],[313,33,190,37,"distanceTravelled"],[313,50,190,25],[313,51,190,15],[313,52,190,56,"toFixed"],[313,59,190,15],[313,60,190,64],[313,61,190,15],[313,62,189,12],[313,70,188,10],[313,71,187,8],[313,72,167,6],[313,73,166,4],[314,0,196,3],[317,4,20,30,"React"],[317,19,20,36,"Component"],[317,28],[321,0,199,0],[321,6,199,6,"styles"],[321,12,199,12],[321,15,199,15,"StyleSheet"],[321,39,199,26,"create"],[321,45,199,15],[321,46,199,33],[322,0,200,2,"container"],[322,4,200,2,"container"],[322,13,200,11],[322,47,201,7,"StyleSheet"],[322,71,201,18,"absoluteFillObject"],[322,89,200,11],[323,0,202,4,"justifyContent"],[323,6,202,4,"justifyContent"],[323,20,202,18],[323,22,202,20],[323,32,200,11],[324,0,203,4,"alignItems"],[324,6,203,4,"alignItems"],[324,16,203,14],[324,18,203,16],[325,0,200,11],[325,6,199,33],[326,0,205,2,"map"],[326,4,205,2,"map"],[326,7,205,5],[326,41,206,7,"StyleSheet"],[326,65,206,18,"absoluteFillObject"],[326,83,205,5],[326,84,199,33],[327,0,208,2,"bubble"],[327,4,208,2,"bubble"],[327,10,208,8],[327,12,208,10],[328,0,209,4,"flex"],[328,6,209,4,"flex"],[328,10,209,8],[328,12,209,10],[328,13,208,10],[329,0,210,4,"backgroundColor"],[329,6,210,4,"backgroundColor"],[329,21,210,19],[329,23,210,21],[329,46,208,10],[330,0,211,4,"paddingHorizontal"],[330,6,211,4,"paddingHorizontal"],[330,23,211,21],[330,25,211,23],[330,27,208,10],[331,0,212,4,"paddingVertical"],[331,6,212,4,"paddingVertical"],[331,21,212,19],[331,23,212,21],[331,25,208,10],[332,0,213,4,"borderRadius"],[332,6,213,4,"borderRadius"],[332,18,213,16],[332,20,213,18],[333,0,208,10],[333,5,199,33],[334,0,215,2,"latlng"],[334,4,215,2,"latlng"],[334,10,215,8],[334,12,215,10],[335,0,216,4,"width"],[335,6,216,4,"width"],[335,11,216,9],[335,13,216,11],[335,16,215,10],[336,0,217,4,"alignItems"],[336,6,217,4,"alignItems"],[336,16,217,14],[336,18,217,16],[337,0,215,10],[337,5,199,33],[338,0,219,2,"button"],[338,4,219,2,"button"],[338,10,219,8],[338,12,219,10],[339,0,220,4,"width"],[339,6,220,4,"width"],[339,11,220,9],[339,13,220,11],[339,15,219,10],[340,0,221,4,"paddingHorizontal"],[340,6,221,4,"paddingHorizontal"],[340,23,221,21],[340,25,221,23],[340,27,219,10],[341,0,222,4,"alignItems"],[341,6,222,4,"alignItems"],[341,16,222,14],[341,18,222,16],[341,26,219,10],[342,0,223,4,"marginHorizontal"],[342,6,223,4,"marginHorizontal"],[342,22,223,20],[342,24,223,22],[343,0,219,10],[343,5,199,33],[344,0,225,2,"buttonContainer"],[344,4,225,2,"buttonContainer"],[344,19,225,17],[344,21,225,19],[345,0,226,4,"flexDirection"],[345,6,226,4,"flexDirection"],[345,19,226,17],[345,21,226,19],[345,26,225,19],[346,0,227,4,"marginVertical"],[346,6,227,4,"marginVertical"],[346,20,227,18],[346,22,227,20],[346,24,225,19],[347,0,228,4,"backgroundColor"],[347,6,228,4,"backgroundColor"],[347,21,228,19],[347,23,228,21],[348,0,225,19],[349,0,199,33],[349,3,199,15],[349,4,199,0],[351,18,232,15,"AnimatedMarkers"],[351,33]]},"type":"js/module"}]}