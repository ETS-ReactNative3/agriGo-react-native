{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"haversine","data":{"isAsync":false}},{"name":"react-native-maps-directions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _reactNativeMaps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11], \"react-native-maps\"));\n\n  var _haversine = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"haversine\"));\n\n  var _reactNativeMapsDirections = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"react-native-maps-directions\"));\n\n  var _jsxFileName = \"/home/kiruba/deliveride/client/user/components/Map.js\";\n  var _components = {\n    AnimatedMarkers: {\n      displayName: \"AnimatedMarkers\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/kiruba/deliveride/client/user/components/Map.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var LATITUDE = 12.9778894;\n  var LONGITUDE = 77.644986;\n  var LATITUDE_DELTA = 0.009;\n  var LONGITUDE_DELTA = 0.009;\n\n  var AnimatedMarkers = function (_React$Component) {\n    (0, _inherits2.default)(AnimatedMarkers, _React$Component);\n\n    function AnimatedMarkers(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedMarkers);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedMarkers).call(this, props));\n\n      _this.pickLocation = function (event) {\n        var coords = event.nativeEvent.coordinate;\n        var latitude = coords.latitude,\n            longitude = coords.longitude;\n\n        _this.map.animateToRegion((0, _objectSpread2.default)({}, _this.state.focusedLocation, {\n          latitude: latitude,\n          longitude: longitude\n        }));\n\n        _this.setState(function (state) {\n          return {\n            focusedLocation: (0, _objectSpread2.default)({}, state.focusedLocation, {\n              latitude: latitude,\n              longitude: longitude\n            }),\n            locationChosen: true\n          };\n        });\n      };\n\n      _this.getLocationHandler = function (event) {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          var coords = {\n            nativeEvent: {\n              coordinate: {\n                latitude: pos.coords.latitude,\n                longitude: pos.coords.longitude\n              }\n            }\n          };\n\n          _this.pickLocation(coords);\n        });\n      };\n\n      _this.calcDistance = function (newLatLng) {\n        var prevLatLng = _this.state.prevLatLng;\n        return (0, _haversine.default)(prevLatLng, newLatLng) || 0;\n      };\n\n      _this.getMapRegion = function () {\n        return {\n          latitude: _this.state.latitude,\n          longitude: _this.state.longitude,\n          latitudeDelta: LATITUDE_DELTA,\n          longitudeDelta: LONGITUDE_DELTA\n        };\n      };\n\n      _this.state = {\n        latitude: LATITUDE,\n        longitude: LONGITUDE,\n        routeCoordinates: [],\n        distanceTravelled: 0,\n        prevLatLng: {},\n        coordinate: new _reactNativeMaps.AnimatedRegion({\n          latitude: LATITUDE,\n          longitude: LONGITUDE\n        }),\n        focusedLocation: {\n          latitude: LATITUDE,\n          longitude: LONGITUDE,\n          latitudeDelta: 0.0122,\n          longitudeDelta: _reactNative.Dimensions.get(\"window\").width / _reactNative.Dimensions.get(\"window\").height * 0.0122\n        },\n        locationChosen: false,\n        temp: null\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedMarkers, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          console.log(position);\n        }, function (error) {\n          return alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      }\n    }, {\n      key: \"updateDriverLocation\",\n      value: function updateDriverLocation() {\n        var _this2 = this;\n\n        var coordinate = this.state.coordinate;\n        var coords = {\n          latitude: this.state.latitude,\n          longitude: this.state.longitude\n        };\n        this.props.socket.on(\"track-driver\", function (data) {\n          console.log(\"reciverd new location\", data);\n          coords = data;\n\n          if (_reactNative.Platform.OS === \"android\") {\n            if (_this2.marker) {\n              coordinate.timing(coords).start();\n              console.log(\"updating locationn\");\n\n              _this2.props.socket.emit(\"location\", coords);\n            }\n          } else {\n            coordinate.timing(data).start();\n          }\n        });\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this3 = this;\n\n        var coordinate = this.state.coordinate;\n        this.props.socket.on(\"track-driver\", function (position) {\n          var _this3$state = _this3.state,\n              coordinate = _this3$state.coordinate,\n              routeCoordinates = _this3$state.routeCoordinates,\n              distanceTravelled = _this3$state.distanceTravelled;\n\n          if (position || true) {\n            var latitude = position.latitude,\n                longitude = position.longitude;\n            var newCoordinate = {\n              latitude: latitude,\n              longitude: longitude\n            };\n\n            _this3.setState((0, _objectSpread2.default)({}, _this3.state, {\n              temp: newCoordinate\n            }));\n\n            if (_this3.marker) {\n              coordinate.timing(newCoordinate).start();\n            }\n\n            _this3.setState({\n              latitude: latitude,\n              longitude: longitude,\n              routeCoordinates: routeCoordinates.concat([newCoordinate]),\n              distanceTravelled: distanceTravelled + _this3.calcDistance(newCoordinate),\n              prevLatLng: newCoordinate\n            });\n          } else {\n            console.log(\"position is null: \", position);\n          }\n        }, function (error) {\n          return console.log(error);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {}\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this4 = this;\n\n        var marker = null;\n\n        if (this.state.locationChosen) {\n          marker = _react.default.createElement(_reactNativeMaps.default.Marker, {\n            coordinate: this.state.focusedLocation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            }\n          });\n        }\n\n        var origin = {\n          latitude: LATITUDE,\n          longitude: LONGITUDE\n        };\n        var destination = {\n          latitude: 13.012766,\n          longitude: 77.699448\n        };\n        var GMapsApiKey = \"AIzaSyB1Q7pVw6rESQCcwqmlEp9mANh5NCDQBwE\";\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          style: styles.map,\n          showUserLocation: true,\n          followUserLocation: true,\n          loadingEnabled: true,\n          region: this.getMapRegion(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          }\n        }, _react.default.createElement(_reactNativeMapsDirections.default, {\n          origin: origin,\n          destination: destination,\n          apikey: GMapsApiKey,\n          strokeWidth: 5,\n          strokeColor: \"#f7b733\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          }\n        }), _react.default.createElement(_reactNativeMaps.Polyline, {\n          coordinates: this.state.routeCoordinates,\n          strokeWidth: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          }\n        }), _react.default.createElement(_reactNativeMaps.Marker.Animated, {\n          ref: function ref(marker) {\n            _this4.marker = marker;\n          },\n          coordinate: this.state.coordinate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: [styles.bubble, styles.button],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.bottomBarContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          }\n        }, parseFloat(this.state.distanceTravelled).toFixed(2), \" km\"))));\n      }\n    }]);\n    return AnimatedMarkers;\n  }(_react.default.Component);\n\n  AnimatedMarkers = _wrapComponent(\"AnimatedMarkers\")(AnimatedMarkers);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      justifyContent: \"flex-end\",\n      alignItems: \"center\"\n    }),\n    map: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),\n    bubble: {\n      flex: 1,\n      backgroundColor: \"rgba(255,255,255,0.7)\",\n      paddingHorizontal: 18,\n      paddingVertical: 12,\n      borderRadius: 20\n    },\n    latlng: {\n      width: 200,\n      alignItems: \"stretch\"\n    },\n    button: {\n      width: 80,\n      paddingHorizontal: 12,\n      alignItems: \"center\",\n      marginHorizontal: 10\n    },\n    buttonContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n      backgroundColor: \"transparent\"\n    }\n  });\n\n  var _default2 = AnimatedMarkers;\n  exports.default = _default2;\n});","map":[[23,0,1,0],[27,0,2,0],[29,0,11,0],[31,0,12,0],[33,0,13,0],[55,0,15,0],[55,6,15,6,"LATITUDE"],[55,14,15,14],[55,17,15,17],[55,27,15,0],[56,0,16,0],[56,6,16,6,"LONGITUDE"],[56,15,16,15],[56,18,16,18],[56,27,16,0],[57,0,17,0],[57,6,17,6,"LATITUDE_DELTA"],[57,20,17,20],[57,23,17,23],[57,28,17,0],[58,0,18,0],[58,6,18,6,"LONGITUDE_DELTA"],[58,21,18,21],[58,24,18,24],[58,29,18,0],[60,6,20,6,"AnimatedMarkers"],[60,21],[63,0,21,2],[63,29,21,14,"props"],[63,34,21,2],[63,36,21,21],[64,0,21,21],[66,0,21,21],[67,0,22,4],[67,119,22,10,"props"],[67,124,22,4],[69,0,21,21],[69,12,85,2,"pickLocation"],[69,24,21,21],[69,27,85,17],[69,37,85,17,"event"],[69,42,85,22],[69,44,85,26],[70,0,86,4],[70,12,86,10,"coords"],[70,18,86,16],[70,21,86,19,"event"],[70,26,86,24],[70,27,86,25,"nativeEvent"],[70,38,86,19],[70,39,86,37,"coordinate"],[70,49,86,4],[71,0,85,26],[71,12,87,12,"latitude"],[71,20,85,26],[71,23,87,36,"coords"],[71,29,85,26],[71,30,87,12,"latitude"],[71,38,85,26],[72,0,85,26],[72,12,87,22,"longitude"],[72,21,85,26],[72,24,87,36,"coords"],[72,30,85,26],[72,31,87,22,"longitude"],[72,40,85,26],[74,0,88,4],[74,14,88,9,"map"],[74,17,88,4],[74,18,88,13,"animateToRegion"],[74,33,88,4],[74,66,89,9],[74,72,89,14,"state"],[74,77,89,9],[74,78,89,20,"focusedLocation"],[74,93,88,4],[75,0,90,6,"latitude"],[75,10,90,6,"latitude"],[75,18,90,14],[75,20,90,16,"latitude"],[75,28,88,4],[76,0,91,6,"longitude"],[76,10,91,6,"longitude"],[76,19,91,15],[76,21,91,17,"longitude"],[77,0,88,4],[79,0,93,4],[79,14,93,9,"setState"],[79,22,93,4],[79,23,93,18],[79,33,93,18,"state"],[79,38,93,23],[79,40,93,27],[80,0,94,6],[80,17,94,13],[81,0,95,8,"focusedLocation"],[81,12,95,8,"focusedLocation"],[81,27,95,23],[81,61,96,13,"state"],[81,66,96,18],[81,67,96,19,"focusedLocation"],[81,82,95,23],[82,0,97,10,"latitude"],[82,14,97,10,"latitude"],[82,22,97,18],[82,24,97,20,"latitude"],[82,32,95,23],[83,0,98,10,"longitude"],[83,14,98,10,"longitude"],[83,23,98,19],[83,25,98,21,"longitude"],[84,0,95,23],[84,14,94,13],[85,0,100,8,"locationChosen"],[85,12,100,8,"locationChosen"],[85,26,100,22],[85,28,100,24],[86,0,94,13],[86,11,94,6],[87,0,102,5],[87,9,93,4],[88,0,103,3],[88,7,21,21],[90,0,21,21],[90,12,105,2,"getLocationHandler"],[90,30,21,21],[90,33,105,23],[90,43,105,23,"event"],[90,48,105,28],[90,50,105,32],[91,0,106,4,"navigator"],[91,8,106,4,"navigator"],[91,17,106,13],[91,18,106,14,"geolocation"],[91,29,106,4],[91,30,106,26,"getCurrentPosition"],[91,48,106,4],[91,49,106,45],[91,59,106,45,"pos"],[91,62,106,48],[91,64,106,52],[92,0,107,6],[92,14,107,12,"coords"],[92,20,107,18],[92,23,107,21],[93,0,108,8,"nativeEvent"],[93,12,108,8,"nativeEvent"],[93,23,108,19],[93,25,108,21],[94,0,109,10,"coordinate"],[94,14,109,10,"coordinate"],[94,24,109,20],[94,26,109,22],[95,0,110,12,"latitude"],[95,16,110,12,"latitude"],[95,24,110,20],[95,26,110,22,"pos"],[95,29,110,25],[95,30,110,26,"coords"],[95,36,110,22],[95,37,110,33,"latitude"],[95,45,109,22],[96,0,111,12,"longitude"],[96,16,111,12,"longitude"],[96,25,111,21],[96,27,111,23,"pos"],[96,30,111,26],[96,31,111,27,"coords"],[96,37,111,23],[96,38,111,34,"longitude"],[97,0,109,22],[98,0,108,21],[99,0,107,21],[99,11,107,6],[101,0,116,6],[101,16,116,11,"pickLocation"],[101,28,116,6],[101,29,116,24,"coords"],[101,35,116,6],[102,0,117,5],[102,9,106,4],[103,0,118,3],[103,7,21,21],[105,0,21,21],[105,12,165,2,"calcDistance"],[105,24,21,21],[105,27,165,17],[105,37,165,17,"newLatLng"],[105,46,165,26],[105,48,165,30],[106,0,165,30],[106,12,166,12,"prevLatLng"],[106,22,165,30],[106,25,166,27],[106,31,166,32,"state"],[106,36,165,30],[106,37,166,12,"prevLatLng"],[106,47,165,30],[107,0,167,4],[107,15,167,11],[107,39,167,21,"prevLatLng"],[107,49,167,11],[107,51,167,33,"newLatLng"],[107,60,167,11],[107,65,167,47],[107,66,167,4],[108,0,168,3],[108,7,21,21],[110,0,21,21],[110,12,170,2,"getMapRegion"],[110,24,21,21],[110,27,170,17],[111,0,170,17],[111,15,170,24],[112,0,171,4,"latitude"],[112,10,171,4,"latitude"],[112,18,171,12],[112,20,171,14],[112,26,171,19,"state"],[112,31,171,14],[112,32,171,25,"latitude"],[112,40,170,24],[113,0,172,4,"longitude"],[113,10,172,4,"longitude"],[113,19,172,13],[113,21,172,15],[113,27,172,20,"state"],[113,32,172,15],[113,33,172,26,"longitude"],[113,42,170,24],[114,0,173,4,"latitudeDelta"],[114,10,173,4,"latitudeDelta"],[114,23,173,17],[114,25,173,19,"LATITUDE_DELTA"],[114,39,170,24],[115,0,174,4,"longitudeDelta"],[115,10,174,4,"longitudeDelta"],[115,24,174,18],[115,26,174,20,"LONGITUDE_DELTA"],[116,0,170,24],[116,9,170,17],[117,0,170,17],[117,7,21,21],[119,0,24,4],[119,12,24,9,"state"],[119,17,24,4],[119,20,24,17],[120,0,25,6,"latitude"],[120,8,25,6,"latitude"],[120,16,25,14],[120,18,25,16,"LATITUDE"],[120,26,24,17],[121,0,26,6,"longitude"],[121,8,26,6,"longitude"],[121,17,26,15],[121,19,26,17,"LONGITUDE"],[121,28,24,17],[122,0,27,6,"routeCoordinates"],[122,8,27,6,"routeCoordinates"],[122,24,27,22],[122,26,27,24],[122,28,24,17],[123,0,28,6,"distanceTravelled"],[123,8,28,6,"distanceTravelled"],[123,25,28,23],[123,27,28,25],[123,28,24,17],[124,0,29,6,"prevLatLng"],[124,8,29,6,"prevLatLng"],[124,18,29,16],[124,20,29,18],[124,22,24,17],[125,0,30,6,"coordinate"],[125,8,30,6,"coordinate"],[125,18,30,16],[125,20,30,18],[125,24,30,22,"AnimatedRegion"],[125,55,30,18],[125,56,30,37],[126,0,31,8,"latitude"],[126,10,31,8,"latitude"],[126,18,31,16],[126,20,31,18,"LATITUDE"],[126,28,30,37],[127,0,32,8,"longitude"],[127,10,32,8,"longitude"],[127,19,32,17],[127,21,32,19,"LONGITUDE"],[128,0,30,37],[128,9,30,18],[128,10,24,17],[129,0,34,6,"focusedLocation"],[129,8,34,6,"focusedLocation"],[129,23,34,21],[129,25,34,23],[130,0,35,8,"latitude"],[130,10,35,8,"latitude"],[130,18,35,16],[130,20,35,18,"LATITUDE"],[130,28,34,23],[131,0,36,8,"longitude"],[131,10,36,8,"longitude"],[131,19,36,17],[131,21,36,19,"LONGITUDE"],[131,30,34,23],[132,0,37,8,"latitudeDelta"],[132,10,37,8,"latitudeDelta"],[132,23,37,21],[132,25,37,23],[132,31,34,23],[133,0,38,8,"longitudeDelta"],[133,10,38,8,"longitudeDelta"],[133,24,38,22],[133,26,39,11,"Dimensions"],[133,50,39,22,"get"],[133,53,39,11],[133,54,39,26],[133,62,39,11],[133,64,39,36,"width"],[133,69,39,11],[133,72,39,44,"Dimensions"],[133,96,39,55,"get"],[133,99,39,44],[133,100,39,59],[133,108,39,44],[133,110,39,69,"height"],[133,116,39,10],[133,119,40,10],[134,0,34,23],[134,9,24,17],[135,0,42,6,"locationChosen"],[135,8,42,6,"locationChosen"],[135,22,42,20],[135,24,42,22],[135,29,24,17],[136,0,43,6,"temp"],[136,8,43,6,"temp"],[136,12,43,10],[136,14,43,12],[137,0,24,17],[137,7,24,4],[138,0,21,21],[139,0,45,3],[143,43,47,23],[144,0,48,4,"navigator"],[144,8,48,4,"navigator"],[144,17,48,13],[144,18,48,14,"geolocation"],[144,29,48,4],[144,30,48,26,"getCurrentPosition"],[144,48,48,4],[144,49,49,6],[144,59,49,6,"position"],[144,67,49,14],[144,69,49,18],[145,0,53,8,"console"],[145,10,53,8,"console"],[145,17,53,15],[145,18,53,16,"log"],[145,21,53,8],[145,22,53,20,"position"],[145,30,53,8],[146,0,54,7],[146,9,48,4],[146,11,55,6],[146,21,55,6,"error"],[146,26,55,11],[147,0,55,11],[147,17,55,15,"alert"],[147,22,55,20],[147,23,55,21,"error"],[147,28,55,26],[147,29,55,27,"message"],[147,36,55,20],[147,37,55,11],[148,0,55,11],[148,9,48,4],[148,11,56,6],[149,0,57,8,"enableHighAccuracy"],[149,10,57,8,"enableHighAccuracy"],[149,28,57,26],[149,30,57,28],[149,34,56,6],[150,0,58,8,"timeout"],[150,10,58,8,"timeout"],[150,17,58,15],[150,19,58,17],[150,24,56,6],[151,0,59,8,"maximumAge"],[151,10,59,8,"maximumAge"],[151,20,59,18],[151,22,59,20],[152,0,56,6],[152,9,48,4],[153,0,62,3],[156,45,64,25],[157,0,64,25],[159,0,64,25],[159,12,65,12,"coordinate"],[159,22,64,25],[159,25,65,27],[159,30,65,32,"state"],[159,35,64,25],[159,36,65,12,"coordinate"],[159,46,64,25],[160,0,66,4],[160,12,66,8,"coords"],[160,18,66,14],[160,21,66,17],[161,0,67,6,"latitude"],[161,10,67,6,"latitude"],[161,18,67,14],[161,20,67,16],[161,25,67,21,"state"],[161,30,67,16],[161,31,67,27,"latitude"],[161,39,66,17],[162,0,68,6,"longitude"],[162,10,68,6,"longitude"],[162,19,68,15],[162,21,68,17],[162,26,68,22,"state"],[162,31,68,17],[162,32,68,28,"longitude"],[163,0,66,17],[163,9,66,4],[164,0,70,4],[164,13,70,9,"props"],[164,18,70,4],[164,19,70,15,"socket"],[164,25,70,4],[164,26,70,22,"on"],[164,28,70,4],[164,29,70,25],[164,43,70,4],[164,45,70,41],[164,55,70,41,"data"],[164,59,70,45],[164,61,70,49],[165,0,71,6,"console"],[165,10,71,6,"console"],[165,17,71,13],[165,18,71,14,"log"],[165,21,71,6],[165,22,71,18],[165,45,71,6],[165,47,71,43,"data"],[165,51,71,6],[166,0,72,6,"coords"],[166,10,72,6,"coords"],[166,16,72,12],[166,19,72,15,"data"],[166,23,72,6],[168,0,73,6],[168,14,73,10,"Platform"],[168,36,73,19,"OS"],[168,38,73,10],[168,43,73,26],[168,52,73,6],[168,54,73,37],[169,0,74,8],[169,16,74,12],[169,22,74,16],[169,23,74,17,"marker"],[169,29,74,8],[169,31,74,25],[170,0,75,10,"coordinate"],[170,14,75,10,"coordinate"],[170,24,75,20],[170,25,75,21,"timing"],[170,31,75,10],[170,32,75,28,"coords"],[170,38,75,10],[170,40,75,36,"start"],[170,45,75,10],[171,0,76,10,"console"],[171,14,76,10,"console"],[171,21,76,17],[171,22,76,18,"log"],[171,25,76,10],[171,26,76,22],[171,46,76,10],[173,0,77,10],[173,14,77,10],[173,20,77,14],[173,21,77,15,"props"],[173,26,77,10],[173,27,77,21,"socket"],[173,33,77,10],[173,34,77,28,"emit"],[173,38,77,10],[173,39,77,33],[173,49,77,10],[173,51,77,45,"coords"],[173,57,77,10],[174,0,78,9],[175,0,79,7],[175,11,73,6],[175,17,79,13],[176,0,80,8,"coordinate"],[176,12,80,8,"coordinate"],[176,22,80,18],[176,23,80,19,"timing"],[176,29,80,8],[176,30,80,26,"data"],[176,34,80,8],[176,36,80,32,"start"],[176,41,80,8],[177,0,81,7],[178,0,82,5],[178,9,70,4],[179,0,83,3],[182,42,120,22],[183,0,120,22],[185,0,120,22],[185,12,121,12,"coordinate"],[185,22,120,22],[185,25,121,27],[185,30,121,32,"state"],[185,35,120,22],[185,36,121,12,"coordinate"],[185,46,120,22],[186,0,122,4],[186,13,122,9,"props"],[186,18,122,4],[186,19,122,15,"socket"],[186,25,122,4],[186,26,122,22,"on"],[186,28,122,4],[186,29,123,6],[186,43,122,4],[186,45,124,6],[186,55,124,6,"position"],[186,63,124,14],[186,65,124,18],[187,0,124,18],[187,29,125,68],[187,35,125,72],[187,36,125,73,"state"],[187,41,124,18],[188,0,124,18],[188,14,125,16,"coordinate"],[188,24,124,18],[188,40,125,16,"coordinate"],[188,50,124,18],[189,0,124,18],[189,14,125,28,"routeCoordinates"],[189,30,124,18],[189,46,125,28,"routeCoordinates"],[189,62,124,18],[190,0,124,18],[190,14,125,46,"distanceTravelled"],[190,31,124,18],[190,47,125,46,"distanceTravelled"],[190,64,124,18],[192,0,126,8],[192,14,126,12,"position"],[192,22,126,20],[192,26,126,24],[192,30,126,8],[192,32,126,30],[193,0,126,30],[193,16,127,18,"latitude"],[193,24,126,30],[193,27,127,42,"position"],[193,35,126,30],[193,36,127,18,"latitude"],[193,44,126,30],[194,0,126,30],[194,16,127,28,"longitude"],[194,25,126,30],[194,28,127,42,"position"],[194,36,126,30],[194,37,127,28,"longitude"],[194,46,126,30],[195,0,129,10],[195,16,129,16,"newCoordinate"],[195,29,129,29],[195,32,129,32],[196,0,130,12,"latitude"],[196,14,130,12,"latitude"],[196,22,130,20],[196,24,130,12,"latitude"],[196,32,129,32],[197,0,131,12,"longitude"],[197,14,131,12,"longitude"],[197,23,131,21],[197,25,131,12,"longitude"],[198,0,129,32],[198,13,129,10],[200,0,133,10],[200,12,133,10],[200,18,133,14],[200,19,133,15,"setState"],[200,27,133,10],[200,60,133,29],[200,66,133,33],[200,67,133,34,"state"],[200,72,133,10],[201,0,133,41,"temp"],[201,14,133,41,"temp"],[201,18,133,45],[201,20,133,47,"newCoordinate"],[202,0,133,10],[204,0,135,10],[204,16,135,14],[204,22,135,18],[204,23,135,19,"marker"],[204,29,135,10],[204,31,135,27],[205,0,141,12,"coordinate"],[205,14,141,12,"coordinate"],[205,24,141,22],[205,25,141,23,"timing"],[205,31,141,12],[205,32,141,30,"newCoordinate"],[205,45,141,12],[205,47,141,45,"start"],[205,52,141,12],[206,0,142,11],[208,0,144,10],[208,12,144,10],[208,18,144,14],[208,19,144,15,"setState"],[208,27,144,10],[208,28,144,24],[209,0,145,12,"latitude"],[209,14,145,12,"latitude"],[209,22,145,20],[209,24,145,12,"latitude"],[209,32,144,24],[210,0,146,12,"longitude"],[210,14,146,12,"longitude"],[210,23,146,21],[210,25,146,12,"longitude"],[210,34,144,24],[211,0,147,12,"routeCoordinates"],[211,14,147,12,"routeCoordinates"],[211,30,147,28],[211,32,147,30,"routeCoordinates"],[211,48,147,46],[211,49,147,47,"concat"],[211,55,147,30],[211,56,147,54],[211,57,147,55,"newCoordinate"],[211,70,147,54],[211,71,147,30],[211,72,144,24],[212,0,148,12,"distanceTravelled"],[212,14,148,12,"distanceTravelled"],[212,31,148,29],[212,33,149,14,"distanceTravelled"],[212,50,149,31],[212,53,149,34],[212,59,149,38],[212,60,149,39,"calcDistance"],[212,72,149,34],[212,73,149,52,"newCoordinate"],[212,86,149,34],[212,87,144,24],[213,0,150,12,"prevLatLng"],[213,14,150,12,"prevLatLng"],[213,24,150,22],[213,26,150,24,"newCoordinate"],[214,0,144,24],[214,13,144,10],[215,0,152,9],[215,11,126,8],[215,17,152,15],[216,0,153,10,"console"],[216,12,153,10,"console"],[216,19,153,17],[216,20,153,18,"log"],[216,23,153,10],[216,24,153,22],[216,44,153,10],[216,46,153,44,"position"],[216,54,153,10],[217,0,154,9],[218,0,155,7],[218,9,122,4],[218,11,156,6],[218,21,156,6,"error"],[218,26,156,11],[219,0,156,11],[219,17,156,15,"console"],[219,24,156,22],[219,25,156,23,"log"],[219,28,156,15],[219,29,156,27,"error"],[219,34,156,15],[219,35,156,11],[220,0,156,11],[220,9,122,4],[220,11,157,6],[221,0,157,8,"enableHighAccuracy"],[221,10,157,8,"enableHighAccuracy"],[221,28,157,26],[221,30,157,28],[221,34,157,6],[222,0,157,34,"timeout"],[222,10,157,34,"timeout"],[222,17,157,41],[222,19,157,43],[222,24,157,6],[223,0,157,50,"maximumAge"],[223,10,157,50,"maximumAge"],[223,20,157,60],[223,22,157,62],[224,0,157,6],[224,9,122,4],[225,0,159,3],[228,45,161,25],[228,46,163,3],[231,31,177,11],[232,0,177,11],[234,0,178,4],[234,12,178,8,"marker"],[234,18,178,14],[234,21,178,17],[234,25,178,4],[236,0,179,4],[236,12,179,8],[236,17,179,13,"state"],[236,22,179,8],[236,23,179,19,"locationChosen"],[236,37,179,4],[236,39,179,35],[237,0,180,6,"marker"],[237,10,180,6,"marker"],[237,16,180,12],[237,19,180,15],[237,48,180,16],[237,72,180,15],[237,73,180,24],[237,79,180,15],[238,0,180,31],[238,12,180,31],[238,22,180,41],[238,24,180,43],[238,29,180,48,"state"],[238,34,180,43],[238,35,180,54,"focusedLocation"],[238,50,180,15],[239,0,180,15],[240,0,180,15],[241,0,180,15],[242,0,180,15],[243,0,180,15],[243,12,180,6],[244,0,181,5],[246,0,182,4],[246,12,182,10,"origin"],[246,18,182,16],[246,21,182,19],[247,0,183,6,"latitude"],[247,10,183,6,"latitude"],[247,18,183,14],[247,20,183,16,"LATITUDE"],[247,28,182,19],[248,0,184,6,"longitude"],[248,10,184,6,"longitude"],[248,19,184,15],[248,21,184,17,"LONGITUDE"],[249,0,182,19],[249,9,182,4],[250,0,186,4],[250,12,186,10,"destination"],[250,23,186,21],[250,26,186,24],[251,0,187,6,"latitude"],[251,10,187,6,"latitude"],[251,18,187,14],[251,20,187,16],[251,29,186,24],[252,0,188,6,"longitude"],[252,10,188,6,"longitude"],[252,19,188,15],[252,21,188,17],[253,0,186,24],[253,9,186,4],[254,0,190,4],[254,12,190,10,"GMapsApiKey"],[254,23,190,21],[254,26,190,24],[254,67,190,4],[255,0,191,4],[255,15,192,6],[255,44,192,7],[255,61,192,6],[256,0,192,12],[256,10,192,12],[256,15,192,17],[256,17,192,19,"styles"],[256,23,192,25],[256,24,192,26,"container"],[256,33,192,6],[257,0,192,6],[258,0,192,6],[259,0,192,6],[260,0,192,6],[261,0,192,6],[261,11,193,8],[261,40,193,9],[261,64,193,8],[262,0,194,10],[262,10,194,10],[262,15,194,15],[262,17,194,17,"styles"],[262,23,194,23],[262,24,194,24,"map"],[262,27,193,8],[263,0,195,10],[263,10,195,10],[263,26,195,26],[263,32,193,8],[264,0,196,10],[264,10,196,10],[264,28,196,28],[264,34,193,8],[265,0,197,10],[265,10,197,10],[265,24,197,24],[265,30,193,8],[266,0,198,10],[266,10,198,10],[266,16,198,16],[266,18,198,18],[266,23,198,23,"getMapRegion"],[266,35,198,18],[266,37,193,8],[267,0,193,8],[268,0,193,8],[269,0,193,8],[270,0,193,8],[271,0,193,8],[271,11,200,10],[271,40,200,11],[271,74,200,10],[272,0,201,12],[272,10,201,12],[272,16,201,18],[272,18,201,20,"origin"],[272,24,200,10],[273,0,202,12],[273,10,202,12],[273,21,202,23],[273,23,202,25,"destination"],[273,34,200,10],[274,0,203,12],[274,10,203,12],[274,16,203,18],[274,18,203,20,"GMapsApiKey"],[274,29,200,10],[275,0,204,12],[275,10,204,12],[275,21,204,23],[275,23,204,25],[275,24,200,10],[276,0,205,12],[276,10,205,12],[276,21,205,23],[276,23,205,25],[276,32,200,10],[277,0,200,10],[278,0,200,10],[279,0,200,10],[280,0,200,10],[281,0,200,10],[281,10,193,8],[281,12,207,10],[281,41,207,11],[281,66,207,10],[282,0,207,20],[282,10,207,20],[282,21,207,31],[282,23,207,33],[282,28,207,38,"state"],[282,33,207,33],[282,34,207,44,"routeCoordinates"],[282,50,207,10],[283,0,207,62],[283,10,207,62],[283,21,207,73],[283,23,207,75],[283,24,207,10],[284,0,207,10],[285,0,207,10],[286,0,207,10],[287,0,207,10],[288,0,207,10],[288,10,193,8],[288,12,208,10],[288,41,208,11],[288,64,208,10],[288,65,208,18],[288,73,208,10],[289,0,209,12],[289,10,209,12],[289,13,209,15],[289,15,209,17],[289,28,209,17,"marker"],[289,34,209,23],[289,36,209,27],[290,0,210,14],[290,12,210,14],[290,18,210,18],[290,19,210,19,"marker"],[290,25,210,14],[290,28,210,28,"marker"],[290,34,210,14],[291,0,211,13],[291,11,208,10],[292,0,212,12],[292,10,212,12],[292,20,212,22],[292,22,212,24],[292,27,212,29,"state"],[292,32,212,24],[292,33,212,35,"coordinate"],[292,43,208,10],[293,0,208,10],[294,0,208,10],[295,0,208,10],[296,0,208,10],[297,0,208,10],[297,10,193,8],[297,11,192,6],[297,13,218,8],[297,42,218,9],[297,59,218,8],[298,0,218,14],[298,10,218,14],[298,15,218,19],[298,17,218,21,"styles"],[298,23,218,27],[298,24,218,28,"buttonContainer"],[298,39,218,8],[299,0,218,8],[300,0,218,8],[301,0,218,8],[302,0,218,8],[303,0,218,8],[303,11,219,10],[303,40,219,11],[303,69,219,10],[304,0,219,28],[304,10,219,28],[304,15,219,33],[304,17,219,35],[304,18,219,36,"styles"],[304,24,219,42],[304,25,219,43,"bubble"],[304,31,219,35],[304,33,219,51,"styles"],[304,39,219,57],[304,40,219,58,"button"],[304,46,219,35],[304,47,219,10],[305,0,219,10],[306,0,219,10],[307,0,219,10],[308,0,219,10],[309,0,219,10],[309,11,220,12],[309,40,220,13],[309,57,220,12],[310,0,220,18],[310,10,220,18],[310,15,220,23],[310,17,220,25,"styles"],[310,23,220,31],[310,24,220,32,"bottomBarContent"],[310,40,220,12],[311,0,220,12],[312,0,220,12],[313,0,220,12],[314,0,220,12],[315,0,220,12],[315,11,221,15,"parseFloat"],[315,21,221,25],[315,22,221,26],[315,27,221,31,"state"],[315,32,221,26],[315,33,221,37,"distanceTravelled"],[315,50,221,25],[315,51,221,15],[315,52,221,56,"toFixed"],[315,59,221,15],[315,60,221,64],[315,61,221,15],[315,62,220,12],[315,70,219,10],[315,71,218,8],[315,72,192,6],[315,73,191,4],[316,0,227,3],[319,4,20,30,"React"],[319,19,20,36,"Component"],[319,28],[323,0,230,0],[323,6,230,6,"styles"],[323,12,230,12],[323,15,230,15,"StyleSheet"],[323,39,230,26,"create"],[323,45,230,15],[323,46,230,33],[324,0,231,2,"container"],[324,4,231,2,"container"],[324,13,231,11],[324,47,232,7,"StyleSheet"],[324,71,232,18,"absoluteFillObject"],[324,89,231,11],[325,0,233,4,"justifyContent"],[325,6,233,4,"justifyContent"],[325,20,233,18],[325,22,233,20],[325,32,231,11],[326,0,234,4,"alignItems"],[326,6,234,4,"alignItems"],[326,16,234,14],[326,18,234,16],[327,0,231,11],[327,6,230,33],[328,0,236,2,"map"],[328,4,236,2,"map"],[328,7,236,5],[328,41,237,7,"StyleSheet"],[328,65,237,18,"absoluteFillObject"],[328,83,236,5],[328,84,230,33],[329,0,239,2,"bubble"],[329,4,239,2,"bubble"],[329,10,239,8],[329,12,239,10],[330,0,240,4,"flex"],[330,6,240,4,"flex"],[330,10,240,8],[330,12,240,10],[330,13,239,10],[331,0,241,4,"backgroundColor"],[331,6,241,4,"backgroundColor"],[331,21,241,19],[331,23,241,21],[331,46,239,10],[332,0,242,4,"paddingHorizontal"],[332,6,242,4,"paddingHorizontal"],[332,23,242,21],[332,25,242,23],[332,27,239,10],[333,0,243,4,"paddingVertical"],[333,6,243,4,"paddingVertical"],[333,21,243,19],[333,23,243,21],[333,25,239,10],[334,0,244,4,"borderRadius"],[334,6,244,4,"borderRadius"],[334,18,244,16],[334,20,244,18],[335,0,239,10],[335,5,230,33],[336,0,246,2,"latlng"],[336,4,246,2,"latlng"],[336,10,246,8],[336,12,246,10],[337,0,247,4,"width"],[337,6,247,4,"width"],[337,11,247,9],[337,13,247,11],[337,16,246,10],[338,0,248,4,"alignItems"],[338,6,248,4,"alignItems"],[338,16,248,14],[338,18,248,16],[339,0,246,10],[339,5,230,33],[340,0,250,2,"button"],[340,4,250,2,"button"],[340,10,250,8],[340,12,250,10],[341,0,251,4,"width"],[341,6,251,4,"width"],[341,11,251,9],[341,13,251,11],[341,15,250,10],[342,0,252,4,"paddingHorizontal"],[342,6,252,4,"paddingHorizontal"],[342,23,252,21],[342,25,252,23],[342,27,250,10],[343,0,253,4,"alignItems"],[343,6,253,4,"alignItems"],[343,16,253,14],[343,18,253,16],[343,26,250,10],[344,0,254,4,"marginHorizontal"],[344,6,254,4,"marginHorizontal"],[344,22,254,20],[344,24,254,22],[345,0,250,10],[345,5,230,33],[346,0,256,2,"buttonContainer"],[346,4,256,2,"buttonContainer"],[346,19,256,17],[346,21,256,19],[347,0,257,4,"flexDirection"],[347,6,257,4,"flexDirection"],[347,19,257,17],[347,21,257,19],[347,26,256,19],[348,0,258,4,"marginVertical"],[348,6,258,4,"marginVertical"],[348,20,258,18],[348,22,258,20],[348,24,256,19],[349,0,259,4,"backgroundColor"],[349,6,259,4,"backgroundColor"],[349,21,259,19],[349,23,259,21],[350,0,256,19],[351,0,230,33],[351,3,230,15],[351,4,230,0],[353,18,263,15,"AnimatedMarkers"],[353,33]]},"type":"js/module"}]}