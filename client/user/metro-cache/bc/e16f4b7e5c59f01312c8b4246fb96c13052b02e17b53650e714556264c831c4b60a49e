{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var haversine = function () {\n    var RADII = {\n      km: 6371,\n      mile: 3960,\n      meter: 6371000,\n      nmi: 3440\n    };\n\n    var toRad = function toRad(num) {\n      return num * Math.PI / 180;\n    };\n\n    var convertCoordinates = function convertCoordinates(format, coordinates) {\n      switch (format) {\n        case '[lat,lon]':\n          return {\n            latitude: coordinates[0],\n            longitude: coordinates[1]\n          };\n\n        case '[lon,lat]':\n          return {\n            latitude: coordinates[1],\n            longitude: coordinates[0]\n          };\n\n        case '{lon,lat}':\n          return {\n            latitude: coordinates.lat,\n            longitude: coordinates.lon\n          };\n\n        case '{lat,lng}':\n          return {\n            latitude: coordinates.lat,\n            longitude: coordinates.lng\n          };\n\n        case 'geojson':\n          return {\n            latitude: coordinates.geometry.coordinates[1],\n            longitude: coordinates.geometry.coordinates[0]\n          };\n\n        default:\n          return coordinates;\n      }\n    };\n\n    return function haversine(startCoordinates, endCoordinates, options) {\n      options = options || {};\n      var R = options.unit in RADII ? RADII[options.unit] : RADII.km;\n      var start = convertCoordinates(options.format, startCoordinates);\n      var end = convertCoordinates(options.format, endCoordinates);\n      var dLat = toRad(end.latitude - start.latitude);\n      var dLon = toRad(end.longitude - start.longitude);\n      var lat1 = toRad(start.latitude);\n      var lat2 = toRad(end.latitude);\n      var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n      if (options.threshold) {\n        return options.threshold > R * c;\n      }\n\n      return R * c;\n    };\n  }();\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = haversine;\n  }\n});","map":[[2,0,1,0],[2,6,1,4,"haversine"],[2,15,1,13],[2,18,1,17],[2,30,1,29],[3,0,2,2],[3,8,2,6,"RADII"],[3,13,2,11],[3,16,2,14],[4,0,3,4,"km"],[4,6,3,4,"km"],[4,8,3,6],[4,10,3,11],[4,14,2,14],[5,0,4,4,"mile"],[5,6,4,4,"mile"],[5,10,4,8],[5,12,4,11],[5,16,2,14],[6,0,5,4,"meter"],[6,6,5,4,"meter"],[6,11,5,9],[6,13,5,11],[6,20,2,14],[7,0,6,4,"nmi"],[7,6,6,4,"nmi"],[7,9,6,7],[7,11,6,11],[8,0,2,14],[8,5,2,2],[10,0,10,2],[10,8,10,6,"toRad"],[10,13,10,11],[10,16,10,14],[10,25,10,6,"toRad"],[10,30,10,14],[10,31,10,24,"num"],[10,34,10,14],[10,36,10,29],[11,0,11,4],[11,13,11,11,"num"],[11,16,11,14],[11,19,11,17,"Math"],[11,23,11,21],[11,24,11,22,"PI"],[11,26,11,11],[11,29,11,27],[11,32,11,4],[12,0,12,3],[12,5,10,2],[14,0,15,2],[14,8,15,6,"convertCoordinates"],[14,26,15,24],[14,29,15,27],[14,38,15,6,"convertCoordinates"],[14,56,15,27],[14,57,15,37,"format"],[14,63,15,27],[14,65,15,45,"coordinates"],[14,76,15,27],[14,78,15,58],[15,0,16,4],[15,14,16,12,"format"],[15,20,16,4],[16,0,17,4],[16,13,17,9],[16,24,17,4],[17,0,18,6],[17,17,18,13],[18,0,18,15,"latitude"],[18,12,18,15,"latitude"],[18,20,18,23],[18,22,18,25,"coordinates"],[18,33,18,36],[18,34,18,37],[18,35,18,36],[18,36,18,13],[19,0,18,41,"longitude"],[19,12,18,41,"longitude"],[19,21,18,50],[19,23,18,52,"coordinates"],[19,34,18,63],[19,35,18,64],[19,36,18,63],[20,0,18,13],[20,11,18,6],[22,0,19,4],[22,13,19,9],[22,24,19,4],[23,0,20,6],[23,17,20,13],[24,0,20,15,"latitude"],[24,12,20,15,"latitude"],[24,20,20,23],[24,22,20,25,"coordinates"],[24,33,20,36],[24,34,20,37],[24,35,20,36],[24,36,20,13],[25,0,20,41,"longitude"],[25,12,20,41,"longitude"],[25,21,20,50],[25,23,20,52,"coordinates"],[25,34,20,63],[25,35,20,64],[25,36,20,63],[26,0,20,13],[26,11,20,6],[28,0,21,4],[28,13,21,9],[28,24,21,4],[29,0,22,6],[29,17,22,13],[30,0,22,15,"latitude"],[30,12,22,15,"latitude"],[30,20,22,23],[30,22,22,25,"coordinates"],[30,33,22,36],[30,34,22,37,"lat"],[30,37,22,13],[31,0,22,42,"longitude"],[31,12,22,42,"longitude"],[31,21,22,51],[31,23,22,53,"coordinates"],[31,34,22,64],[31,35,22,65,"lon"],[32,0,22,13],[32,11,22,6],[34,0,23,4],[34,13,23,9],[34,24,23,4],[35,0,24,6],[35,17,24,13],[36,0,24,15,"latitude"],[36,12,24,15,"latitude"],[36,20,24,23],[36,22,24,25,"coordinates"],[36,33,24,36],[36,34,24,37,"lat"],[36,37,24,13],[37,0,24,42,"longitude"],[37,12,24,42,"longitude"],[37,21,24,51],[37,23,24,53,"coordinates"],[37,34,24,64],[37,35,24,65,"lng"],[38,0,24,13],[38,11,24,6],[40,0,25,4],[40,13,25,9],[40,22,25,4],[41,0,26,6],[41,17,26,13],[42,0,26,15,"latitude"],[42,12,26,15,"latitude"],[42,20,26,23],[42,22,26,25,"coordinates"],[42,33,26,36],[42,34,26,37,"geometry"],[42,42,26,25],[42,43,26,46,"coordinates"],[42,54,26,25],[42,55,26,58],[42,56,26,25],[42,57,26,13],[43,0,26,62,"longitude"],[43,12,26,62,"longitude"],[43,21,26,71],[43,23,26,73,"coordinates"],[43,34,26,84],[43,35,26,85,"geometry"],[43,43,26,73],[43,44,26,94,"coordinates"],[43,55,26,73],[43,56,26,106],[43,57,26,73],[44,0,26,13],[44,11,26,6],[46,0,27,4],[47,0,28,6],[47,17,28,13,"coordinates"],[47,28,28,6],[48,0,16,4],[49,0,30,3],[49,5,15,2],[51,0,32,2],[51,11,32,9],[51,20,32,18,"haversine"],[51,29,32,9],[51,30,32,29,"startCoordinates"],[51,46,32,9],[51,48,32,47,"endCoordinates"],[51,62,32,9],[51,64,32,63,"options"],[51,71,32,9],[51,73,32,72],[52,0,33,4,"options"],[52,6,33,4,"options"],[52,13,33,11],[52,16,33,16,"options"],[52,23,33,23],[52,27,33,27],[52,29,33,4],[53,0,35,4],[53,10,35,8,"R"],[53,11,35,9],[53,14,35,12,"options"],[53,21,35,19],[53,22,35,20,"unit"],[53,26,35,12],[53,30,35,28,"RADII"],[53,35,35,12],[53,38,36,8,"RADII"],[53,43,36,13],[53,44,36,14,"options"],[53,51,36,21],[53,52,36,22,"unit"],[53,56,36,13],[53,57,35,12],[53,60,37,8,"RADII"],[53,65,37,13],[53,66,37,14,"km"],[53,68,35,4],[54,0,39,4],[54,10,39,8,"start"],[54,15,39,13],[54,18,39,16,"convertCoordinates"],[54,36,39,34],[54,37,39,35,"options"],[54,44,39,42],[54,45,39,43,"format"],[54,51,39,34],[54,53,39,51,"startCoordinates"],[54,69,39,34],[54,70,39,4],[55,0,40,4],[55,10,40,8,"end"],[55,13,40,11],[55,16,40,14,"convertCoordinates"],[55,34,40,32],[55,35,40,33,"options"],[55,42,40,40],[55,43,40,41,"format"],[55,49,40,32],[55,51,40,49,"endCoordinates"],[55,65,40,32],[55,66,40,4],[56,0,42,4],[56,10,42,8,"dLat"],[56,14,42,12],[56,17,42,15,"toRad"],[56,22,42,20],[56,23,42,21,"end"],[56,26,42,24],[56,27,42,25,"latitude"],[56,35,42,21],[56,38,42,36,"start"],[56,43,42,41],[56,44,42,42,"latitude"],[56,52,42,20],[56,53,42,4],[57,0,43,4],[57,10,43,8,"dLon"],[57,14,43,12],[57,17,43,15,"toRad"],[57,22,43,20],[57,23,43,21,"end"],[57,26,43,24],[57,27,43,25,"longitude"],[57,36,43,21],[57,39,43,37,"start"],[57,44,43,42],[57,45,43,43,"longitude"],[57,54,43,20],[57,55,43,4],[58,0,44,4],[58,10,44,8,"lat1"],[58,14,44,12],[58,17,44,15,"toRad"],[58,22,44,20],[58,23,44,21,"start"],[58,28,44,26],[58,29,44,27,"latitude"],[58,37,44,20],[58,38,44,4],[59,0,45,4],[59,10,45,8,"lat2"],[59,14,45,12],[59,17,45,15,"toRad"],[59,22,45,20],[59,23,45,21,"end"],[59,26,45,24],[59,27,45,25,"latitude"],[59,35,45,20],[59,36,45,4],[60,0,47,4],[60,10,47,8,"a"],[60,11,47,9],[60,14,47,12,"Math"],[60,18,47,16],[60,19,47,17,"sin"],[60,22,47,12],[60,23,47,21,"dLat"],[60,27,47,25],[60,30,47,26],[60,31,47,12],[60,35,47,31,"Math"],[60,39,47,35],[60,40,47,36,"sin"],[60,43,47,31],[60,44,47,40,"dLat"],[60,48,47,44],[60,51,47,45],[60,52,47,31],[60,53,47,12],[60,56,48,12,"Math"],[60,60,48,16],[60,61,48,17,"sin"],[60,64,48,12],[60,65,48,21,"dLon"],[60,69,48,25],[60,72,48,26],[60,73,48,12],[60,77,48,31,"Math"],[60,81,48,35],[60,82,48,36,"sin"],[60,85,48,31],[60,86,48,40,"dLon"],[60,90,48,44],[60,93,48,45],[60,94,48,31],[60,95,48,12],[60,98,48,50,"Math"],[60,102,48,54],[60,103,48,55,"cos"],[60,106,48,50],[60,107,48,59,"lat1"],[60,111,48,50],[60,112,48,12],[60,115,48,67,"Math"],[60,119,48,71],[60,120,48,72,"cos"],[60,123,48,67],[60,124,48,76,"lat2"],[60,128,48,67],[60,129,47,4],[61,0,49,4],[61,10,49,8,"c"],[61,11,49,9],[61,14,49,12],[61,18,49,16,"Math"],[61,22,49,20],[61,23,49,21,"atan2"],[61,28,49,16],[61,29,49,27,"Math"],[61,33,49,31],[61,34,49,32,"sqrt"],[61,38,49,27],[61,39,49,37,"a"],[61,40,49,27],[61,41,49,16],[61,43,49,41,"Math"],[61,47,49,45],[61,48,49,46,"sqrt"],[61,52,49,41],[61,53,49,51],[61,57,49,53,"a"],[61,58,49,41],[61,59,49,16],[61,60,49,4],[63,0,51,4],[63,10,51,8,"options"],[63,17,51,15],[63,18,51,16,"threshold"],[63,27,51,4],[63,29,51,27],[64,0,52,6],[64,15,52,13,"options"],[64,22,52,20],[64,23,52,21,"threshold"],[64,32,52,13],[64,35,52,34,"R"],[64,36,52,35],[64,39,52,38,"c"],[64,40,52,6],[65,0,53,5],[67,0,55,4],[67,13,55,11,"R"],[67,14,55,12],[67,17,55,15,"c"],[67,18,55,4],[68,0,56,3],[68,5,32,2],[69,0,58,1],[69,3,1,16],[69,5,1,0],[71,0,60,0],[71,6,60,4],[71,13,60,11,"module"],[71,19,60,4],[71,24,60,22],[71,35,60,4],[71,39,60,37,"module"],[71,45,60,43],[71,46,60,44,"exports"],[71,53,60,0],[71,55,60,53],[72,0,61,2,"module"],[72,4,61,2,"module"],[72,10,61,8],[72,11,61,9,"exports"],[72,18,61,2],[72,21,61,19,"haversine"],[72,30,61,2],[73,0,62,1]]},"type":"js/module"}]}