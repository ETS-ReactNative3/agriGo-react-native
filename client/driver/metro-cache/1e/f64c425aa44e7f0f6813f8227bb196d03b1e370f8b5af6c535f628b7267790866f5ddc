{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"haversine","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _reactNativeMaps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11], \"react-native-maps\"));\n\n  var _haversine = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"haversine\"));\n\n  var _jsxFileName = \"/home/kiruba/deliveride/client/driver/components/Map.js\";\n  var _components = {\n    AnimatedMarkers: {\n      displayName: \"AnimatedMarkers\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/kiruba/deliveride/client/driver/components/Map.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var LATITUDE = 12.9778894;\n  var LONGITUDE = 77.644986;\n  var LATITUDE_DELTA = 0.009;\n  var LONGITUDE_DELTA = 0.009;\n\n  var AnimatedMarkers = function (_React$Component) {\n    (0, _inherits2.default)(AnimatedMarkers, _React$Component);\n\n    function AnimatedMarkers(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedMarkers);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedMarkers).call(this, props));\n\n      _this.pickLocation = function (event) {\n        var coords = event.nativeEvent.coordinate;\n        var latitude = coords.latitude,\n            longitude = coords.longitude;\n\n        _this.map.animateToRegion((0, _objectSpread2.default)({}, _this.state.focusedLocation, {\n          latitude: latitude,\n          longitude: longitude\n        }));\n\n        _this.setState(function (state) {\n          return {\n            focusedLocation: (0, _objectSpread2.default)({}, state.focusedLocation, {\n              latitude: latitude,\n              longitude: longitude\n            }),\n            locationChosen: true\n          };\n        });\n      };\n\n      _this.getLocationHandler = function (event) {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          var coords = {\n            nativeEvent: {\n              coordinate: {\n                latitude: pos.coords.latitude,\n                longitude: pos.coords.longitude\n              }\n            }\n          };\n\n          _this.pickLocation(coords);\n        });\n      };\n\n      _this.calcDistance = function (newLatLng) {\n        var prevLatLng = _this.state.prevLatLng;\n        return (0, _haversine.default)(prevLatLng, newLatLng) || 0;\n      };\n\n      _this.getMapRegion = function () {\n        return {\n          latitude: _this.state.latitude,\n          longitude: _this.state.longitude,\n          latitudeDelta: LATITUDE_DELTA,\n          longitudeDelta: LONGITUDE_DELTA\n        };\n      };\n\n      _this.state = {\n        latitude: LATITUDE,\n        longitude: LONGITUDE,\n        routeCoordinates: [],\n        distanceTravelled: 0,\n        prevLatLng: {},\n        coordinate: new _reactNativeMaps.AnimatedRegion({\n          latitude: LATITUDE,\n          longitude: LONGITUDE\n        }),\n        focusedLocation: {\n          latitude: LATITUDE,\n          longitude: LONGITUDE,\n          latitudeDelta: 0.0122,\n          longitudeDelta: _reactNative.Dimensions.get(\"window\").width / _reactNative.Dimensions.get(\"window\").height * 0.0122\n        },\n        locationChosen: false\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedMarkers, [{\n      key: \"componentWillMount\",\n      value: function componentWillMount() {\n        navigator.geolocation.getCurrentPosition(function (position) {}, function (error) {\n          return alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        var data = {\n          latitude: LATITUDE,\n          longitude: LONGITUDE\n        };\n        this.props.socket.emit('location', data);\n        var coordinate = this.state.coordinate;\n        this.marker = coordinate;\n        this.watchID = navigator.geolocation.watchPosition(function (position) {\n          var _this2$state = _this2.state,\n              coordinate = _this2$state.coordinate,\n              routeCoordinates = _this2$state.routeCoordinates,\n              distanceTravelled = _this2$state.distanceTravelled;\n          var _position$coords = position.coords,\n              latitude = _position$coords.latitude,\n              longitude = _position$coords.longitude;\n          var newCoordinate = {\n            latitude: latitude,\n            longitude: longitude\n          };\n\n          if (_reactNative.Platform.OS === \"android\") {\n            if (_this2.marker) {\n              coordinate.timing(newCoordinate).start();\n              console.log(\"updating\");\n\n              _this2.props.socket.emit('location', newCoordinate);\n            }\n          } else {\n            coordinate.timing(newCoordinate).start();\n          }\n\n          _this2.setState({\n            latitude: latitude,\n            longitude: longitude,\n            routeCoordinates: routeCoordinates.concat([newCoordinate]),\n            distanceTravelled: distanceTravelled + _this2.calcDistance(newCoordinate),\n            prevLatLng: newCoordinate\n          });\n        }, function (error) {\n          return console.log(error);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        navigator.geolocation.clearWatch(this.watchID);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var marker = null;\n\n        if (this.state.locationChosen) {\n          marker = _react.default.createElement(_reactNativeMaps.default.Marker, {\n            coordinate: this.state.focusedLocation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            }\n          });\n        }\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          style: styles.map,\n          showUserLocation: true,\n          followUserLocation: true,\n          loadingEnabled: true,\n          region: this.getMapRegion(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          }\n        }, _react.default.createElement(_reactNativeMaps.Polyline, {\n          coordinates: this.state.routeCoordinates,\n          strokeWidth: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          }\n        }), _react.default.createElement(_reactNativeMaps.Marker.Animated, {\n          ref: function ref(marker) {\n            _this3.marker = marker;\n          },\n          coordinate: this.state.coordinate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: [styles.bubble, styles.button],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.bottomBarContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          }\n        }, parseFloat(this.state.distanceTravelled).toFixed(2), \" km\"))));\n      }\n    }]);\n    return AnimatedMarkers;\n  }(_react.default.Component);\n\n  AnimatedMarkers = _wrapComponent(\"AnimatedMarkers\")(AnimatedMarkers);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      justifyContent: \"flex-end\",\n      alignItems: \"center\"\n    }),\n    map: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),\n    bubble: {\n      flex: 1,\n      backgroundColor: \"rgba(255,255,255,0.7)\",\n      paddingHorizontal: 18,\n      paddingVertical: 12,\n      borderRadius: 20\n    },\n    latlng: {\n      width: 200,\n      alignItems: \"stretch\"\n    },\n    button: {\n      width: 80,\n      paddingHorizontal: 12,\n      alignItems: \"center\",\n      marginHorizontal: 10\n    },\n    buttonContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n      backgroundColor: \"transparent\"\n    }\n  });\n\n  var _default2 = AnimatedMarkers;\n  exports.default = _default2;\n});","map":[[23,0,1,0],[27,0,2,0],[29,0,10,0],[31,0,11,0],[53,0,13,0],[53,6,13,6,"LATITUDE"],[53,14,13,14],[53,17,13,17],[53,27,13,0],[54,0,14,0],[54,6,14,6,"LONGITUDE"],[54,15,14,15],[54,18,14,18],[54,27,14,0],[55,0,15,0],[55,6,15,6,"LATITUDE_DELTA"],[55,20,15,20],[55,23,15,23],[55,28,15,0],[56,0,16,0],[56,6,16,6,"LONGITUDE_DELTA"],[56,21,16,21],[56,24,16,24],[56,29,16,0],[58,6,18,6,"AnimatedMarkers"],[58,21],[61,0,19,2],[61,29,19,14,"props"],[61,34,19,2],[61,36,19,21],[62,0,19,21],[64,0,19,21],[65,0,20,4],[65,119,20,10,"props"],[65,124,20,4],[67,0,19,21],[67,12,54,2,"pickLocation"],[67,24,19,21],[67,27,54,17],[67,37,54,17,"event"],[67,42,54,22],[67,44,54,25],[68,0,55,4],[68,12,55,10,"coords"],[68,18,55,16],[68,21,55,19,"event"],[68,26,55,24],[68,27,55,25,"nativeEvent"],[68,38,55,19],[68,39,55,37,"coordinate"],[68,49,55,4],[69,0,54,25],[69,12,56,11,"latitude"],[69,20,54,25],[69,23,56,33,"coords"],[69,29,54,25],[69,30,56,11,"latitude"],[69,38,54,25],[70,0,54,25],[70,12,56,20,"longitude"],[70,21,54,25],[70,24,56,33,"coords"],[70,30,54,25],[70,31,56,20,"longitude"],[70,40,54,25],[72,0,57,4],[72,14,57,9,"map"],[72,17,57,4],[72,18,57,13,"animateToRegion"],[72,33,57,4],[72,66,58,9],[72,72,58,14,"state"],[72,77,58,9],[72,78,58,20,"focusedLocation"],[72,93,57,4],[73,0,58,36,"latitude"],[73,10,58,36,"latitude"],[73,18,58,44],[73,20,58,45,"latitude"],[73,28,57,4],[74,0,58,54,"longitude"],[74,10,58,54,"longitude"],[74,19,58,63],[74,21,58,64,"longitude"],[75,0,57,4],[77,0,60,4],[77,14,60,9,"setState"],[77,22,60,4],[77,23,60,18],[77,33,60,18,"state"],[77,38,60,23],[77,40,60,25],[78,0,60,26],[78,17,60,32],[79,0,60,34,"focusedLocation"],[79,12,60,34,"focusedLocation"],[79,27,60,49],[79,61,60,54,"state"],[79,66,60,59],[79,67,60,60,"focusedLocation"],[79,82,60,49],[80,0,60,76,"latitude"],[80,14,60,76,"latitude"],[80,22,60,84],[80,24,60,85,"latitude"],[80,32,60,49],[81,0,60,94,"longitude"],[81,14,60,94,"longitude"],[81,23,60,103],[81,25,60,104,"longitude"],[82,0,60,49],[82,14,60,32],[83,0,60,115,"locationChosen"],[83,12,60,115,"locationChosen"],[83,26,60,129],[83,28,60,130],[84,0,60,32],[84,11,60,26],[85,0,60,137],[85,9,60,4],[86,0,62,3],[86,7,19,21],[88,0,19,21],[88,12,64,2,"getLocationHandler"],[88,30,19,21],[88,33,64,23],[88,43,64,24,"event"],[88,48,64,23],[88,50,64,33],[89,0,65,4,"navigator"],[89,8,65,4,"navigator"],[89,17,65,13],[89,18,65,14,"geolocation"],[89,29,65,4],[89,30,65,26,"getCurrentPosition"],[89,48,65,4],[89,49,65,45],[89,59,65,45,"pos"],[89,62,65,48],[89,64,65,50],[90,0,66,6],[90,14,66,12,"coords"],[90,20,66,18],[90,23,66,19],[91,0,67,8,"nativeEvent"],[91,12,67,8,"nativeEvent"],[91,23,67,19],[91,25,67,20],[92,0,68,10,"coordinate"],[92,14,68,10,"coordinate"],[92,24,68,20],[92,26,68,21],[93,0,68,22,"latitude"],[93,16,68,22,"latitude"],[93,24,68,30],[93,26,68,31,"pos"],[93,29,68,34],[93,30,68,35,"coords"],[93,36,68,31],[93,37,68,42,"latitude"],[93,45,68,21],[94,0,68,51,"longitude"],[94,16,68,51,"longitude"],[94,25,68,60],[94,27,68,61,"pos"],[94,30,68,64],[94,31,68,65,"coords"],[94,37,68,61],[94,38,68,72,"longitude"],[95,0,68,21],[96,0,67,20],[97,0,66,19],[97,11,66,6],[99,0,72,6],[99,16,72,11,"pickLocation"],[99,28,72,6],[99,29,72,24,"coords"],[99,35,72,6],[100,0,73,5],[100,9,65,4],[101,0,74,3],[101,7,19,21],[103,0,19,21],[103,12,121,2,"calcDistance"],[103,24,19,21],[103,27,121,17],[103,37,121,17,"newLatLng"],[103,46,121,26],[103,48,121,30],[104,0,121,30],[104,12,122,12,"prevLatLng"],[104,22,121,30],[104,25,122,27],[104,31,122,32,"state"],[104,36,121,30],[104,37,122,12,"prevLatLng"],[104,47,121,30],[105,0,123,4],[105,15,123,11],[105,39,123,21,"prevLatLng"],[105,49,123,11],[105,51,123,33,"newLatLng"],[105,60,123,11],[105,65,123,47],[105,66,123,4],[106,0,124,3],[106,7,19,21],[108,0,19,21],[108,12,126,2,"getMapRegion"],[108,24,19,21],[108,27,126,17],[109,0,126,17],[109,15,126,24],[110,0,127,4,"latitude"],[110,10,127,4,"latitude"],[110,18,127,12],[110,20,127,14],[110,26,127,19,"state"],[110,31,127,14],[110,32,127,25,"latitude"],[110,40,126,24],[111,0,128,4,"longitude"],[111,10,128,4,"longitude"],[111,19,128,13],[111,21,128,15],[111,27,128,20,"state"],[111,32,128,15],[111,33,128,26,"longitude"],[111,42,126,24],[112,0,129,4,"latitudeDelta"],[112,10,129,4,"latitudeDelta"],[112,23,129,17],[112,25,129,19,"LATITUDE_DELTA"],[112,39,126,24],[113,0,130,4,"longitudeDelta"],[113,10,130,4,"longitudeDelta"],[113,24,130,18],[113,26,130,20,"LONGITUDE_DELTA"],[114,0,126,24],[114,9,126,17],[115,0,126,17],[115,7,19,21],[117,0,22,4],[117,12,22,9,"state"],[117,17,22,4],[117,20,22,17],[118,0,23,6,"latitude"],[118,8,23,6,"latitude"],[118,16,23,14],[118,18,23,17,"LATITUDE"],[118,26,22,17],[119,0,24,6,"longitude"],[119,8,24,6,"longitude"],[119,17,24,15],[119,19,24,18,"LONGITUDE"],[119,28,22,17],[120,0,25,6,"routeCoordinates"],[120,8,25,6,"routeCoordinates"],[120,24,25,22],[120,26,25,24],[120,28,22,17],[121,0,26,6,"distanceTravelled"],[121,8,26,6,"distanceTravelled"],[121,25,26,23],[121,27,26,25],[121,28,22,17],[122,0,27,6,"prevLatLng"],[122,8,27,6,"prevLatLng"],[122,18,27,16],[122,20,27,18],[122,22,22,17],[123,0,28,6,"coordinate"],[123,8,28,6,"coordinate"],[123,18,28,16],[123,20,28,18],[123,24,28,22,"AnimatedRegion"],[123,55,28,18],[123,56,28,37],[124,0,29,8,"latitude"],[124,10,29,8,"latitude"],[124,18,29,16],[124,20,29,18,"LATITUDE"],[124,28,28,37],[125,0,30,8,"longitude"],[125,10,30,8,"longitude"],[125,19,30,17],[125,21,30,19,"LONGITUDE"],[126,0,28,37],[126,9,28,18],[126,10,22,17],[127,0,32,6,"focusedLocation"],[127,8,32,6,"focusedLocation"],[127,23,32,21],[127,25,32,22],[128,0,33,8,"latitude"],[128,10,33,8,"latitude"],[128,18,33,16],[128,20,33,17,"LATITUDE"],[128,28,32,22],[129,0,34,8,"longitude"],[129,10,34,8,"longitude"],[129,19,34,17],[129,21,34,18,"LONGITUDE"],[129,30,32,22],[130,0,35,8,"latitudeDelta"],[130,10,35,8,"latitudeDelta"],[130,23,35,21],[130,25,35,22],[130,31,32,22],[131,0,36,8,"longitudeDelta"],[131,10,36,8,"longitudeDelta"],[131,24,36,22],[131,26,36,23,"Dimensions"],[131,50,36,34,"get"],[131,53,36,23],[131,54,36,38],[131,62,36,23],[131,64,36,48,"width"],[131,69,36,23],[131,72,36,54,"Dimensions"],[131,96,36,65,"get"],[131,99,36,54],[131,100,36,69],[131,108,36,54],[131,110,36,79,"height"],[131,116,36,23],[131,119,36,86],[132,0,32,22],[132,9,22,17],[133,0,37,8,"locationChosen"],[133,8,37,8,"locationChosen"],[133,22,37,22],[133,24,37,23],[134,0,22,17],[134,7,22,4],[135,0,19,21],[136,0,39,3],[140,43,41,23],[141,0,42,4,"navigator"],[141,8,42,4,"navigator"],[141,17,42,13],[141,18,42,14,"geolocation"],[141,29,42,4],[141,30,42,26,"getCurrentPosition"],[141,48,42,4],[141,49,43,6],[141,59,43,6,"position"],[141,67,43,14],[141,69,43,18],[141,70,43,20],[141,71,42,4],[141,73,44,6],[141,83,44,6,"error"],[141,88,44,11],[142,0,44,11],[142,17,44,15,"alert"],[142,22,44,20],[142,23,44,21,"error"],[142,28,44,26],[142,29,44,27,"message"],[142,36,44,20],[142,37,44,11],[143,0,44,11],[143,9,42,4],[143,11,45,6],[144,0,46,8,"enableHighAccuracy"],[144,10,46,8,"enableHighAccuracy"],[144,28,46,26],[144,30,46,28],[144,34,45,6],[145,0,47,8,"timeout"],[145,10,47,8,"timeout"],[145,17,47,15],[145,19,47,17],[145,24,45,6],[146,0,48,8,"maximumAge"],[146,10,48,8,"maximumAge"],[146,20,48,18],[146,22,48,20],[147,0,45,6],[147,9,42,4],[148,0,51,3],[151,42,76,22],[152,0,76,22],[154,0,79,4],[154,12,79,10,"data"],[154,16,79,14],[154,19,79,17],[155,0,79,18,"latitude"],[155,10,79,18,"latitude"],[155,18,79,26],[155,20,79,27,"LATITUDE"],[155,28,79,17],[156,0,79,37,"longitude"],[156,10,79,37,"longitude"],[156,19,79,46],[156,21,79,48,"LONGITUDE"],[157,0,79,17],[157,9,79,4],[158,0,80,4],[158,13,80,9,"props"],[158,18,80,4],[158,19,80,15,"socket"],[158,25,80,4],[158,26,80,22,"emit"],[158,30,80,4],[158,31,80,27],[158,41,80,4],[158,43,80,39,"data"],[158,47,80,4],[159,0,76,22],[159,12,81,12,"coordinate"],[159,22,76,22],[159,25,81,27],[159,30,81,32,"state"],[159,35,76,22],[159,36,81,12,"coordinate"],[159,46,76,22],[160,0,82,4],[160,13,82,9,"marker"],[160,19,82,4],[160,22,82,18,"coordinate"],[160,32,82,4],[161,0,83,4],[161,13,83,9,"watchID"],[161,20,83,4],[161,23,83,19,"navigator"],[161,32,83,28],[161,33,83,29,"geolocation"],[161,44,83,19],[161,45,83,41,"watchPosition"],[161,58,83,19],[161,59,84,6],[161,69,84,6,"position"],[161,77,84,14],[161,79,84,18],[162,0,84,18],[162,29,85,68],[162,35,85,72],[162,36,85,73,"state"],[162,41,84,18],[163,0,84,18],[163,14,85,16,"coordinate"],[163,24,84,18],[163,40,85,16,"coordinate"],[163,50,84,18],[164,0,84,18],[164,14,85,28,"routeCoordinates"],[164,30,84,18],[164,46,85,28,"routeCoordinates"],[164,62,84,18],[165,0,84,18],[165,14,85,46,"distanceTravelled"],[165,31,84,18],[165,47,85,46,"distanceTravelled"],[165,64,84,18],[166,0,84,18],[166,33,86,40,"position"],[166,41,86,48],[166,42,86,49,"coords"],[166,48,84,18],[167,0,84,18],[167,14,86,16,"latitude"],[167,22,84,18],[167,42,86,16,"latitude"],[167,50,84,18],[168,0,84,18],[168,14,86,26,"longitude"],[168,23,84,18],[168,43,86,26,"longitude"],[168,52,84,18],[169,0,88,8],[169,14,88,14,"newCoordinate"],[169,27,88,27],[169,30,88,30],[170,0,89,10,"latitude"],[170,12,89,10,"latitude"],[170,20,89,18],[170,22,89,10,"latitude"],[170,30,88,30],[171,0,90,10,"longitude"],[171,12,90,10,"longitude"],[171,21,90,19],[171,23,90,10,"longitude"],[172,0,88,30],[172,11,88,8],[174,0,93,8],[174,14,93,12,"Platform"],[174,36,93,21,"OS"],[174,38,93,12],[174,43,93,28],[174,52,93,8],[174,54,93,39],[175,0,94,10],[175,16,94,14],[175,22,94,18],[175,23,94,19,"marker"],[175,29,94,10],[175,31,94,27],[176,0,95,12,"coordinate"],[176,14,95,12,"coordinate"],[176,24,95,22],[176,25,95,23,"timing"],[176,31,95,12],[176,32,95,30,"newCoordinate"],[176,45,95,12],[176,47,95,45,"start"],[176,52,95,12],[177,0,96,12,"console"],[177,14,96,12,"console"],[177,21,96,19],[177,22,96,20,"log"],[177,25,96,12],[177,26,96,24],[177,36,96,12],[179,0,97,12],[179,14,97,12],[179,20,97,16],[179,21,97,17,"props"],[179,26,97,12],[179,27,97,23,"socket"],[179,33,97,12],[179,34,97,30,"emit"],[179,38,97,12],[179,39,97,35],[179,49,97,12],[179,51,97,47,"newCoordinate"],[179,64,97,12],[180,0,98,11],[181,0,99,9],[181,11,93,8],[181,17,99,15],[182,0,100,10,"coordinate"],[182,12,100,10,"coordinate"],[182,22,100,20],[182,23,100,21,"timing"],[182,29,100,10],[182,30,100,28,"newCoordinate"],[182,43,100,10],[182,45,100,43,"start"],[182,50,100,10],[183,0,101,9],[185,0,103,8],[185,10,103,8],[185,16,103,12],[185,17,103,13,"setState"],[185,25,103,8],[185,26,103,22],[186,0,104,10,"latitude"],[186,12,104,10,"latitude"],[186,20,104,18],[186,22,104,10,"latitude"],[186,30,103,22],[187,0,105,10,"longitude"],[187,12,105,10,"longitude"],[187,21,105,19],[187,23,105,10,"longitude"],[187,32,103,22],[188,0,106,10,"routeCoordinates"],[188,12,106,10,"routeCoordinates"],[188,28,106,26],[188,30,106,28,"routeCoordinates"],[188,46,106,44],[188,47,106,45,"concat"],[188,53,106,28],[188,54,106,52],[188,55,106,53,"newCoordinate"],[188,68,106,52],[188,69,106,28],[188,70,103,22],[189,0,107,10,"distanceTravelled"],[189,12,107,10,"distanceTravelled"],[189,29,107,27],[189,31,108,12,"distanceTravelled"],[189,48,108,29],[189,51,108,32],[189,57,108,36],[189,58,108,37,"calcDistance"],[189,70,108,32],[189,71,108,50,"newCoordinate"],[189,84,108,32],[189,85,103,22],[190,0,109,10,"prevLatLng"],[190,12,109,10,"prevLatLng"],[190,22,109,20],[190,24,109,22,"newCoordinate"],[191,0,103,22],[191,11,103,8],[192,0,111,7],[192,9,83,19],[192,11,112,6],[192,21,112,6,"error"],[192,26,112,11],[193,0,112,11],[193,17,112,15,"console"],[193,24,112,22],[193,25,112,23,"log"],[193,28,112,15],[193,29,112,27,"error"],[193,34,112,15],[193,35,112,11],[194,0,112,11],[194,9,83,19],[194,11,113,6],[195,0,113,8,"enableHighAccuracy"],[195,10,113,8,"enableHighAccuracy"],[195,28,113,26],[195,30,113,28],[195,34,113,6],[196,0,113,34,"timeout"],[196,10,113,34,"timeout"],[196,17,113,41],[196,19,113,43],[196,24,113,6],[197,0,113,50,"maximumAge"],[197,10,113,50,"maximumAge"],[197,20,113,60],[197,22,113,62],[198,0,113,6],[198,9,83,19],[198,10,83,4],[199,0,115,3],[202,45,117,25],[203,0,118,4,"navigator"],[203,8,118,4,"navigator"],[203,17,118,13],[203,18,118,14,"geolocation"],[203,29,118,4],[203,30,118,26,"clearWatch"],[203,40,118,4],[203,41,118,37],[203,46,118,42,"watchID"],[203,53,118,4],[204,0,119,3],[207,31,133,11],[208,0,133,11],[210,0,134,4],[210,12,134,8,"marker"],[210,18,134,14],[210,21,134,15],[210,25,134,4],[212,0,135,4],[212,12,135,7],[212,17,135,12,"state"],[212,22,135,7],[212,23,135,18,"locationChosen"],[212,37,135,4],[212,39,135,33],[213,0,136,6,"marker"],[213,10,136,6,"marker"],[213,16,136,12],[213,19,136,15],[213,48,136,16],[213,72,136,15],[213,73,136,24],[213,79,136,15],[214,0,136,31],[214,12,136,31],[214,22,136,41],[214,24,136,43],[214,29,136,48,"state"],[214,34,136,43],[214,35,136,54,"focusedLocation"],[214,50,136,15],[215,0,136,15],[216,0,136,15],[217,0,136,15],[218,0,136,15],[219,0,136,15],[219,12,136,6],[220,0,137,5],[222,0,138,4],[222,15,139,6],[222,44,139,7],[222,61,139,6],[223,0,139,12],[223,10,139,12],[223,15,139,17],[223,17,139,19,"styles"],[223,23,139,25],[223,24,139,26,"container"],[223,33,139,6],[224,0,139,6],[225,0,139,6],[226,0,139,6],[227,0,139,6],[228,0,139,6],[228,11,140,8],[228,40,140,9],[228,64,140,8],[229,0,141,10],[229,10,141,10],[229,15,141,15],[229,17,141,17,"styles"],[229,23,141,23],[229,24,141,24,"map"],[229,27,140,8],[230,0,142,10],[230,10,142,10],[230,26,142,26],[230,32,140,8],[231,0,143,10],[231,10,143,10],[231,28,143,28],[231,34,140,8],[232,0,144,10],[232,10,144,10],[232,24,144,24],[232,30,140,8],[233,0,145,10],[233,10,145,10],[233,16,145,16],[233,18,145,18],[233,23,145,23,"getMapRegion"],[233,35,145,18],[233,37,140,8],[234,0,140,8],[235,0,140,8],[236,0,140,8],[237,0,140,8],[238,0,140,8],[238,11,147,10],[238,40,147,11],[238,65,147,10],[239,0,147,20],[239,10,147,20],[239,21,147,31],[239,23,147,33],[239,28,147,38,"state"],[239,33,147,33],[239,34,147,44,"routeCoordinates"],[239,50,147,10],[240,0,147,62],[240,10,147,62],[240,21,147,73],[240,23,147,75],[240,24,147,10],[241,0,147,10],[242,0,147,10],[243,0,147,10],[244,0,147,10],[245,0,147,10],[245,10,140,8],[245,12,148,10],[245,41,148,11],[245,64,148,10],[245,65,148,18],[245,73,148,10],[246,0,149,12],[246,10,149,12],[246,13,149,15],[246,15,149,17],[246,28,149,17,"marker"],[246,34,149,23],[246,36,149,27],[247,0,150,14],[247,12,150,14],[247,18,150,18],[247,19,150,19,"marker"],[247,25,150,14],[247,28,150,28,"marker"],[247,34,150,14],[248,0,151,13],[248,11,148,10],[249,0,152,12],[249,10,152,12],[249,20,152,22],[249,22,152,24],[249,27,152,29,"state"],[249,32,152,24],[249,33,152,35,"coordinate"],[249,43,148,10],[250,0,148,10],[251,0,148,10],[252,0,148,10],[253,0,148,10],[254,0,148,10],[254,10,140,8],[254,11,139,6],[254,13,154,8],[254,42,154,9],[254,59,154,8],[255,0,154,14],[255,10,154,14],[255,15,154,19],[255,17,154,21,"styles"],[255,23,154,27],[255,24,154,28,"buttonContainer"],[255,39,154,8],[256,0,154,8],[257,0,154,8],[258,0,154,8],[259,0,154,8],[260,0,154,8],[260,11,155,10],[260,40,155,11],[260,69,155,10],[261,0,155,28],[261,10,155,28],[261,15,155,33],[261,17,155,35],[261,18,155,36,"styles"],[261,24,155,42],[261,25,155,43,"bubble"],[261,31,155,35],[261,33,155,51,"styles"],[261,39,155,57],[261,40,155,58,"button"],[261,46,155,35],[261,47,155,10],[262,0,155,10],[263,0,155,10],[264,0,155,10],[265,0,155,10],[266,0,155,10],[266,11,156,12],[266,40,156,13],[266,57,156,12],[267,0,156,18],[267,10,156,18],[267,15,156,23],[267,17,156,25,"styles"],[267,23,156,31],[267,24,156,32,"bottomBarContent"],[267,40,156,12],[268,0,156,12],[269,0,156,12],[270,0,156,12],[271,0,156,12],[272,0,156,12],[272,11,157,15,"parseFloat"],[272,21,157,25],[272,22,157,26],[272,27,157,31,"state"],[272,32,157,26],[272,33,157,37,"distanceTravelled"],[272,50,157,25],[272,51,157,15],[272,52,157,56,"toFixed"],[272,59,157,15],[272,60,157,64],[272,61,157,15],[272,62,156,12],[272,70,155,10],[272,71,154,8],[272,72,139,6],[272,73,138,4],[273,0,163,3],[276,4,18,30,"React"],[276,19,18,36,"Component"],[276,28],[280,0,166,0],[280,6,166,6,"styles"],[280,12,166,12],[280,15,166,15,"StyleSheet"],[280,39,166,26,"create"],[280,45,166,15],[280,46,166,33],[281,0,167,2,"container"],[281,4,167,2,"container"],[281,13,167,11],[281,47,168,7,"StyleSheet"],[281,71,168,18,"absoluteFillObject"],[281,89,167,11],[282,0,169,4,"justifyContent"],[282,6,169,4,"justifyContent"],[282,20,169,18],[282,22,169,20],[282,32,167,11],[283,0,170,4,"alignItems"],[283,6,170,4,"alignItems"],[283,16,170,14],[283,18,170,16],[284,0,167,11],[284,6,166,33],[285,0,172,2,"map"],[285,4,172,2,"map"],[285,7,172,5],[285,41,173,7,"StyleSheet"],[285,65,173,18,"absoluteFillObject"],[285,83,172,5],[285,84,166,33],[286,0,175,2,"bubble"],[286,4,175,2,"bubble"],[286,10,175,8],[286,12,175,10],[287,0,176,4,"flex"],[287,6,176,4,"flex"],[287,10,176,8],[287,12,176,10],[287,13,175,10],[288,0,177,4,"backgroundColor"],[288,6,177,4,"backgroundColor"],[288,21,177,19],[288,23,177,21],[288,46,175,10],[289,0,178,4,"paddingHorizontal"],[289,6,178,4,"paddingHorizontal"],[289,23,178,21],[289,25,178,23],[289,27,175,10],[290,0,179,4,"paddingVertical"],[290,6,179,4,"paddingVertical"],[290,21,179,19],[290,23,179,21],[290,25,175,10],[291,0,180,4,"borderRadius"],[291,6,180,4,"borderRadius"],[291,18,180,16],[291,20,180,18],[292,0,175,10],[292,5,166,33],[293,0,182,2,"latlng"],[293,4,182,2,"latlng"],[293,10,182,8],[293,12,182,10],[294,0,183,4,"width"],[294,6,183,4,"width"],[294,11,183,9],[294,13,183,11],[294,16,182,10],[295,0,184,4,"alignItems"],[295,6,184,4,"alignItems"],[295,16,184,14],[295,18,184,16],[296,0,182,10],[296,5,166,33],[297,0,186,2,"button"],[297,4,186,2,"button"],[297,10,186,8],[297,12,186,10],[298,0,187,4,"width"],[298,6,187,4,"width"],[298,11,187,9],[298,13,187,11],[298,15,186,10],[299,0,188,4,"paddingHorizontal"],[299,6,188,4,"paddingHorizontal"],[299,23,188,21],[299,25,188,23],[299,27,186,10],[300,0,189,4,"alignItems"],[300,6,189,4,"alignItems"],[300,16,189,14],[300,18,189,16],[300,26,186,10],[301,0,190,4,"marginHorizontal"],[301,6,190,4,"marginHorizontal"],[301,22,190,20],[301,24,190,22],[302,0,186,10],[302,5,166,33],[303,0,192,2,"buttonContainer"],[303,4,192,2,"buttonContainer"],[303,19,192,17],[303,21,192,19],[304,0,193,4,"flexDirection"],[304,6,193,4,"flexDirection"],[304,19,193,17],[304,21,193,19],[304,26,192,19],[305,0,194,4,"marginVertical"],[305,6,194,4,"marginVertical"],[305,20,194,18],[305,22,194,20],[305,24,192,19],[306,0,195,4,"backgroundColor"],[306,6,195,4,"backgroundColor"],[306,21,195,19],[306,23,195,21],[307,0,192,19],[308,0,166,33],[308,3,166,15],[308,4,166,0],[310,18,199,15,"AnimatedMarkers"],[310,33]]},"type":"js/module"}]}