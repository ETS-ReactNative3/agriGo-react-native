{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../node_modules/react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-maps","data":{"isAsync":false}},{"name":"haversine","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../node_modules/react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _reactNativeMaps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11], \"react-native-maps\"));\n\n  var _haversine = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"haversine\"));\n\n  var _jsxFileName = \"/home/kiruba/Desktop/finalyear project/agrigo/agriGo-react-native/client/driver/components/Map.js\";\n  var _components = {\n    AnimatedMarkers: {\n      displayName: \"AnimatedMarkers\"\n    }\n  };\n\n  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/kiruba/Desktop/finalyear project/agrigo/agriGo-react-native/client/driver/components/Map.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var LATITUDE = 13.1525072;\n  var LONGITUDE = 80.1024845;\n  var LATITUDE_DELTA = 0.009;\n  var LONGITUDE_DELTA = 0.009;\n\n  var AnimatedMarkers = function (_React$Component) {\n    (0, _inherits2.default)(AnimatedMarkers, _React$Component);\n\n    function AnimatedMarkers(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedMarkers);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedMarkers).call(this, props));\n\n      _this.pickLocation = function (event) {\n        var coords = event.nativeEvent.coordinate;\n        var latitude = coords.latitude,\n            longitude = coords.longitude;\n\n        _this.map.animateToRegion((0, _objectSpread2.default)({}, _this.state.focusedLocation, {\n          latitude: latitude,\n          longitude: longitude\n        }));\n\n        _this.setState(function (state) {\n          return {\n            focusedLocation: (0, _objectSpread2.default)({}, state.focusedLocation, {\n              latitude: latitude,\n              longitude: longitude\n            }),\n            locationChosen: true\n          };\n        });\n      };\n\n      _this.getLocationHandler = function (event) {\n        navigator.geolocation.getCurrentPosition(function (pos) {\n          var coords = {\n            nativeEvent: {\n              coordinate: {\n                latitude: pos.coords.latitude,\n                longitude: pos.coords.longitude\n              }\n            }\n          };\n\n          _this.pickLocation(coords);\n        });\n      };\n\n      _this.calcDistance = function (newLatLng) {\n        var prevLatLng = _this.state.prevLatLng;\n        return (0, _haversine.default)(prevLatLng, newLatLng) || 0;\n      };\n\n      _this.getMapRegion = function () {\n        return {\n          latitude: _this.state.latitude,\n          longitude: _this.state.longitude,\n          latitudeDelta: LATITUDE_DELTA,\n          longitudeDelta: LONGITUDE_DELTA\n        };\n      };\n\n      _this.state = {\n        latitude: LATITUDE,\n        longitude: LONGITUDE,\n        routeCoordinates: [],\n        distanceTravelled: 0,\n        prevLatLng: {},\n        coordinate: new _reactNativeMaps.AnimatedRegion({\n          latitude: LATITUDE,\n          longitude: LONGITUDE\n        }),\n        focusedLocation: {\n          latitude: LATITUDE,\n          longitude: LONGITUDE,\n          latitudeDelta: 0.0122,\n          longitudeDelta: _reactNative.Dimensions.get(\"window\").width / _reactNative.Dimensions.get(\"window\").height * 0.0122\n        },\n        locationChosen: false\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedMarkers, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        navigator.geolocation.getCurrentPosition(function (position) {\n          _this2.setState((0, _objectSpread2.default)({}, _this2.state, {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          }));\n\n          console.log(position);\n        }, function (error) {\n          return alert(error.message);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n        var data = {\n          latitude: LATITUDE,\n          longitude: LONGITUDE\n        };\n        this.props.socket.emit(\"location\", data);\n        var coordinate = this.state.coordinate;\n        this.marker = coordinate;\n        this.watchID = navigator.geolocation.watchPosition(function (position) {\n          var _this2$state = _this2.state,\n              coordinate = _this2$state.coordinate,\n              routeCoordinates = _this2$state.routeCoordinates,\n              distanceTravelled = _this2$state.distanceTravelled;\n          var _position$coords = position.coords,\n              latitude = _position$coords.latitude,\n              longitude = _position$coords.longitude;\n          var newCoordinate = {\n            latitude: latitude,\n            longitude: longitude\n          };\n\n          if (_reactNative.Platform.OS === \"android\") {\n            if (_this2.marker) {\n              coordinate.timing(newCoordinate).start();\n              console.log(\"updating\");\n\n              _this2.props.socket.emit(\"location\", newCoordinate);\n            }\n          } else {\n            coordinate.timing(newCoordinate).start();\n          }\n\n          _this2.setState({\n            latitude: latitude,\n            longitude: longitude,\n            routeCoordinates: routeCoordinates.concat([newCoordinate]),\n            distanceTravelled: distanceTravelled + _this2.calcDistance(newCoordinate),\n            prevLatLng: newCoordinate\n          });\n        }, function (error) {\n          return console.log(error);\n        }, {\n          enableHighAccuracy: true,\n          timeout: 20000,\n          maximumAge: 1000\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        navigator.geolocation.clearWatch(this.watchID);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var marker = null;\n\n        if (this.state.locationChosen) {\n          marker = _react.default.createElement(_reactNativeMaps.default.Marker, {\n            coordinate: this.state.focusedLocation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            }\n          });\n        }\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          }\n        }, _react.default.createElement(_reactNativeMaps.default, {\n          style: styles.map,\n          showUserLocation: true,\n          followUserLocation: true,\n          loadingEnabled: true,\n          region: this.getMapRegion(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          }\n        }, _react.default.createElement(_reactNativeMaps.Polyline, {\n          coordinates: this.state.routeCoordinates,\n          strokeWidth: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          }\n        }), _react.default.createElement(_reactNativeMaps.Marker.Animated, {\n          ref: function ref(marker) {\n            _this3.marker = marker;\n          },\n          coordinate: this.state.coordinate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: [styles.bubble, styles.button],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: styles.bottomBarContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          }\n        }, parseFloat(this.state.distanceTravelled).toFixed(2), \" km\"))));\n      }\n    }]);\n    return AnimatedMarkers;\n  }(_react.default.Component);\n\n  AnimatedMarkers = _wrapComponent(\"AnimatedMarkers\")(AnimatedMarkers);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      justifyContent: \"flex-end\",\n      alignItems: \"center\"\n    }),\n    map: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),\n    bubble: {\n      flex: 1,\n      backgroundColor: \"rgba(255,255,255,0.7)\",\n      paddingHorizontal: 18,\n      paddingVertical: 12,\n      borderRadius: 20\n    },\n    latlng: {\n      width: 200,\n      alignItems: \"stretch\"\n    },\n    button: {\n      width: 80,\n      paddingHorizontal: 12,\n      alignItems: \"center\",\n      marginHorizontal: 10\n    },\n    buttonContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n      backgroundColor: \"transparent\"\n    }\n  });\n\n  var _default2 = AnimatedMarkers;\n  exports.default = _default2;\n});","map":[[23,0,1,0],[27,0,2,0],[29,0,10,0],[31,0,11,0],[53,0,13,0],[53,6,13,6,"LATITUDE"],[53,14,13,14],[53,17,13,17],[53,27,13,0],[54,0,14,0],[54,6,14,6,"LONGITUDE"],[54,15,14,15],[54,18,14,18],[54,28,14,0],[55,0,15,0],[55,6,15,6,"LATITUDE_DELTA"],[55,20,15,20],[55,23,15,23],[55,28,15,0],[56,0,16,0],[56,6,16,6,"LONGITUDE_DELTA"],[56,21,16,21],[56,24,16,24],[56,29,16,0],[58,6,18,6,"AnimatedMarkers"],[58,21],[61,0,19,2],[61,29,19,14,"props"],[61,34,19,2],[61,36,19,21],[62,0,19,21],[64,0,19,21],[65,0,20,4],[65,119,20,10,"props"],[65,124,20,4],[67,0,19,21],[67,12,44,2,"pickLocation"],[67,24,19,21],[67,27,44,17],[67,37,44,17,"event"],[67,42,44,22],[67,44,44,26],[68,0,45,4],[68,12,45,10,"coords"],[68,18,45,16],[68,21,45,19,"event"],[68,26,45,24],[68,27,45,25,"nativeEvent"],[68,38,45,19],[68,39,45,37,"coordinate"],[68,49,45,4],[69,0,44,26],[69,12,46,12,"latitude"],[69,20,44,26],[69,23,46,36,"coords"],[69,29,44,26],[69,30,46,12,"latitude"],[69,38,44,26],[70,0,44,26],[70,12,46,22,"longitude"],[70,21,44,26],[70,24,46,36,"coords"],[70,30,44,26],[70,31,46,22,"longitude"],[70,40,44,26],[72,0,47,4],[72,14,47,9,"map"],[72,17,47,4],[72,18,47,13,"animateToRegion"],[72,33,47,4],[72,66,48,9],[72,72,48,14,"state"],[72,77,48,9],[72,78,48,20,"focusedLocation"],[72,93,47,4],[73,0,49,6,"latitude"],[73,10,49,6,"latitude"],[73,18,49,14],[73,20,49,16,"latitude"],[73,28,47,4],[74,0,50,6,"longitude"],[74,10,50,6,"longitude"],[74,19,50,15],[74,21,50,17,"longitude"],[75,0,47,4],[77,0,52,4],[77,14,52,9,"setState"],[77,22,52,4],[77,23,52,18],[77,33,52,18,"state"],[77,38,52,23],[77,40,52,27],[78,0,53,6],[78,17,53,13],[79,0,54,8,"focusedLocation"],[79,12,54,8,"focusedLocation"],[79,27,54,23],[79,61,55,13,"state"],[79,66,55,18],[79,67,55,19,"focusedLocation"],[79,82,54,23],[80,0,56,10,"latitude"],[80,14,56,10,"latitude"],[80,22,56,18],[80,24,56,20,"latitude"],[80,32,54,23],[81,0,57,10,"longitude"],[81,14,57,10,"longitude"],[81,23,57,19],[81,25,57,21,"longitude"],[82,0,54,23],[82,14,53,13],[83,0,59,8,"locationChosen"],[83,12,59,8,"locationChosen"],[83,26,59,22],[83,28,59,24],[84,0,53,13],[84,11,53,6],[85,0,61,5],[85,9,52,4],[86,0,62,3],[86,7,19,21],[88,0,19,21],[88,12,64,2,"getLocationHandler"],[88,30,19,21],[88,33,64,23],[88,43,64,23,"event"],[88,48,64,28],[88,50,64,32],[89,0,65,4,"navigator"],[89,8,65,4,"navigator"],[89,17,65,13],[89,18,65,14,"geolocation"],[89,29,65,4],[89,30,65,26,"getCurrentPosition"],[89,48,65,4],[89,49,65,45],[89,59,65,45,"pos"],[89,62,65,48],[89,64,65,52],[90,0,66,6],[90,14,66,12,"coords"],[90,20,66,18],[90,23,66,21],[91,0,67,8,"nativeEvent"],[91,12,67,8,"nativeEvent"],[91,23,67,19],[91,25,67,21],[92,0,68,10,"coordinate"],[92,14,68,10,"coordinate"],[92,24,68,20],[92,26,68,22],[93,0,69,12,"latitude"],[93,16,69,12,"latitude"],[93,24,69,20],[93,26,69,22,"pos"],[93,29,69,25],[93,30,69,26,"coords"],[93,36,69,22],[93,37,69,33,"latitude"],[93,45,68,22],[94,0,70,12,"longitude"],[94,16,70,12,"longitude"],[94,25,70,21],[94,27,70,23,"pos"],[94,30,70,26],[94,31,70,27,"coords"],[94,37,70,23],[94,38,70,34,"longitude"],[95,0,68,22],[96,0,67,21],[97,0,66,21],[97,11,66,6],[99,0,75,6],[99,16,75,11,"pickLocation"],[99,28,75,6],[99,29,75,24,"coords"],[99,35,75,6],[100,0,76,5],[100,9,65,4],[101,0,77,3],[101,7,19,21],[103,0,19,21],[103,12,140,2,"calcDistance"],[103,24,19,21],[103,27,140,17],[103,37,140,17,"newLatLng"],[103,46,140,26],[103,48,140,30],[104,0,140,30],[104,12,141,12,"prevLatLng"],[104,22,140,30],[104,25,141,27],[104,31,141,32,"state"],[104,36,140,30],[104,37,141,12,"prevLatLng"],[104,47,140,30],[105,0,142,4],[105,15,142,11],[105,39,142,21,"prevLatLng"],[105,49,142,11],[105,51,142,33,"newLatLng"],[105,60,142,11],[105,65,142,47],[105,66,142,4],[106,0,143,3],[106,7,19,21],[108,0,19,21],[108,12,145,2,"getMapRegion"],[108,24,19,21],[108,27,145,17],[109,0,145,17],[109,15,145,24],[110,0,146,4,"latitude"],[110,10,146,4,"latitude"],[110,18,146,12],[110,20,146,14],[110,26,146,19,"state"],[110,31,146,14],[110,32,146,25,"latitude"],[110,40,145,24],[111,0,147,4,"longitude"],[111,10,147,4,"longitude"],[111,19,147,13],[111,21,147,15],[111,27,147,20,"state"],[111,32,147,15],[111,33,147,26,"longitude"],[111,42,145,24],[112,0,148,4,"latitudeDelta"],[112,10,148,4,"latitudeDelta"],[112,23,148,17],[112,25,148,19,"LATITUDE_DELTA"],[112,39,145,24],[113,0,149,4,"longitudeDelta"],[113,10,149,4,"longitudeDelta"],[113,24,149,18],[113,26,149,20,"LONGITUDE_DELTA"],[114,0,145,24],[114,9,145,17],[115,0,145,17],[115,7,19,21],[117,0,22,4],[117,12,22,9,"state"],[117,17,22,4],[117,20,22,17],[118,0,23,6,"latitude"],[118,8,23,6,"latitude"],[118,16,23,14],[118,18,23,16,"LATITUDE"],[118,26,22,17],[119,0,24,6,"longitude"],[119,8,24,6,"longitude"],[119,17,24,15],[119,19,24,17,"LONGITUDE"],[119,28,22,17],[120,0,25,6,"routeCoordinates"],[120,8,25,6,"routeCoordinates"],[120,24,25,22],[120,26,25,24],[120,28,22,17],[121,0,26,6,"distanceTravelled"],[121,8,26,6,"distanceTravelled"],[121,25,26,23],[121,27,26,25],[121,28,22,17],[122,0,27,6,"prevLatLng"],[122,8,27,6,"prevLatLng"],[122,18,27,16],[122,20,27,18],[122,22,22,17],[123,0,28,6,"coordinate"],[123,8,28,6,"coordinate"],[123,18,28,16],[123,20,28,18],[123,24,28,22,"AnimatedRegion"],[123,55,28,18],[123,56,28,37],[124,0,29,8,"latitude"],[124,10,29,8,"latitude"],[124,18,29,16],[124,20,29,18,"LATITUDE"],[124,28,28,37],[125,0,30,8,"longitude"],[125,10,30,8,"longitude"],[125,19,30,17],[125,21,30,19,"LONGITUDE"],[126,0,28,37],[126,9,28,18],[126,10,22,17],[127,0,32,6,"focusedLocation"],[127,8,32,6,"focusedLocation"],[127,23,32,21],[127,25,32,23],[128,0,33,8,"latitude"],[128,10,33,8,"latitude"],[128,18,33,16],[128,20,33,18,"LATITUDE"],[128,28,32,23],[129,0,34,8,"longitude"],[129,10,34,8,"longitude"],[129,19,34,17],[129,21,34,19,"LONGITUDE"],[129,30,32,23],[130,0,35,8,"latitudeDelta"],[130,10,35,8,"latitudeDelta"],[130,23,35,21],[130,25,35,23],[130,31,32,23],[131,0,36,8,"longitudeDelta"],[131,10,36,8,"longitudeDelta"],[131,24,36,22],[131,26,37,11,"Dimensions"],[131,50,37,22,"get"],[131,53,37,11],[131,54,37,26],[131,62,37,11],[131,64,37,36,"width"],[131,69,37,11],[131,72,37,44,"Dimensions"],[131,96,37,55,"get"],[131,99,37,44],[131,100,37,59],[131,108,37,44],[131,110,37,69,"height"],[131,116,37,10],[131,119,38,10],[132,0,32,23],[132,9,22,17],[133,0,40,6,"locationChosen"],[133,8,40,6,"locationChosen"],[133,22,40,20],[133,24,40,22],[134,0,22,17],[134,7,22,4],[135,0,19,21],[136,0,42,3],[140,42,79,22],[141,0,79,22],[143,0,80,4,"navigator"],[143,8,80,4,"navigator"],[143,17,80,13],[143,18,80,14,"geolocation"],[143,29,80,4],[143,30,80,26,"getCurrentPosition"],[143,48,80,4],[143,49,81,6],[143,59,81,6,"position"],[143,67,81,14],[143,69,81,18],[144,0,82,8],[144,10,82,8],[144,16,82,12],[144,17,82,13,"setState"],[144,25,82,8],[144,58,83,13],[144,64,83,17],[144,65,83,18,"state"],[144,70,82,8],[145,0,84,10,"latitude"],[145,12,84,10,"latitude"],[145,20,84,18],[145,22,84,20,"position"],[145,30,84,28],[145,31,84,29,"coords"],[145,37,84,20],[145,38,84,36,"latitude"],[145,46,82,8],[146,0,85,10,"longitude"],[146,12,85,10,"longitude"],[146,21,85,19],[146,23,85,21,"position"],[146,31,85,29],[146,32,85,30,"coords"],[146,38,85,21],[146,39,85,37,"longitude"],[147,0,82,8],[149,0,87,8,"console"],[149,10,87,8,"console"],[149,17,87,15],[149,18,87,16,"log"],[149,21,87,8],[149,22,87,20,"position"],[149,30,87,8],[150,0,88,7],[150,9,80,4],[150,11,89,6],[150,21,89,6,"error"],[150,26,89,11],[151,0,89,11],[151,17,89,15,"alert"],[151,22,89,20],[151,23,89,21,"error"],[151,28,89,26],[151,29,89,27,"message"],[151,36,89,20],[151,37,89,11],[152,0,89,11],[152,9,80,4],[152,11,90,6],[153,0,91,8,"enableHighAccuracy"],[153,10,91,8,"enableHighAccuracy"],[153,28,91,26],[153,30,91,28],[153,34,90,6],[154,0,92,8,"timeout"],[154,10,92,8,"timeout"],[154,17,92,15],[154,19,92,17],[154,24,90,6],[155,0,93,8,"maximumAge"],[155,10,93,8,"maximumAge"],[155,20,93,18],[155,22,93,20],[156,0,90,6],[156,9,80,4],[157,0,98,4],[157,12,98,10,"data"],[157,16,98,14],[157,19,98,17],[158,0,98,19,"latitude"],[158,10,98,19,"latitude"],[158,18,98,27],[158,20,98,29,"LATITUDE"],[158,28,98,17],[159,0,98,39,"longitude"],[159,10,98,39,"longitude"],[159,19,98,48],[159,21,98,50,"LONGITUDE"],[160,0,98,17],[160,9,98,4],[161,0,99,4],[161,13,99,9,"props"],[161,18,99,4],[161,19,99,15,"socket"],[161,25,99,4],[161,26,99,22,"emit"],[161,30,99,4],[161,31,99,27],[161,41,99,4],[161,43,99,39,"data"],[161,47,99,4],[162,0,79,22],[162,12,100,12,"coordinate"],[162,22,79,22],[162,25,100,27],[162,30,100,32,"state"],[162,35,79,22],[162,36,100,12,"coordinate"],[162,46,79,22],[163,0,101,4],[163,13,101,9,"marker"],[163,19,101,4],[163,22,101,18,"coordinate"],[163,32,101,4],[164,0,102,4],[164,13,102,9,"watchID"],[164,20,102,4],[164,23,102,19,"navigator"],[164,32,102,28],[164,33,102,29,"geolocation"],[164,44,102,19],[164,45,102,41,"watchPosition"],[164,58,102,19],[164,59,103,6],[164,69,103,6,"position"],[164,77,103,14],[164,79,103,18],[165,0,103,18],[165,29,104,68],[165,35,104,72],[165,36,104,73,"state"],[165,41,103,18],[166,0,103,18],[166,14,104,16,"coordinate"],[166,24,103,18],[166,40,104,16,"coordinate"],[166,50,103,18],[167,0,103,18],[167,14,104,28,"routeCoordinates"],[167,30,103,18],[167,46,104,28,"routeCoordinates"],[167,62,103,18],[168,0,103,18],[168,14,104,46,"distanceTravelled"],[168,31,103,18],[168,47,104,46,"distanceTravelled"],[168,64,103,18],[169,0,103,18],[169,33,105,40,"position"],[169,41,105,48],[169,42,105,49,"coords"],[169,48,103,18],[170,0,103,18],[170,14,105,16,"latitude"],[170,22,103,18],[170,42,105,16,"latitude"],[170,50,103,18],[171,0,103,18],[171,14,105,26,"longitude"],[171,23,103,18],[171,43,105,26,"longitude"],[171,52,103,18],[172,0,107,8],[172,14,107,14,"newCoordinate"],[172,27,107,27],[172,30,107,30],[173,0,108,10,"latitude"],[173,12,108,10,"latitude"],[173,20,108,18],[173,22,108,10,"latitude"],[173,30,107,30],[174,0,109,10,"longitude"],[174,12,109,10,"longitude"],[174,21,109,19],[174,23,109,10,"longitude"],[175,0,107,30],[175,11,107,8],[177,0,112,8],[177,14,112,12,"Platform"],[177,36,112,21,"OS"],[177,38,112,12],[177,43,112,28],[177,52,112,8],[177,54,112,39],[178,0,113,10],[178,16,113,14],[178,22,113,18],[178,23,113,19,"marker"],[178,29,113,10],[178,31,113,27],[179,0,114,12,"coordinate"],[179,14,114,12,"coordinate"],[179,24,114,22],[179,25,114,23,"timing"],[179,31,114,12],[179,32,114,30,"newCoordinate"],[179,45,114,12],[179,47,114,45,"start"],[179,52,114,12],[180,0,115,12,"console"],[180,14,115,12,"console"],[180,21,115,19],[180,22,115,20,"log"],[180,25,115,12],[180,26,115,24],[180,36,115,12],[182,0,116,12],[182,14,116,12],[182,20,116,16],[182,21,116,17,"props"],[182,26,116,12],[182,27,116,23,"socket"],[182,33,116,12],[182,34,116,30,"emit"],[182,38,116,12],[182,39,116,35],[182,49,116,12],[182,51,116,47,"newCoordinate"],[182,64,116,12],[183,0,117,11],[184,0,118,9],[184,11,112,8],[184,17,118,15],[185,0,119,10,"coordinate"],[185,12,119,10,"coordinate"],[185,22,119,20],[185,23,119,21,"timing"],[185,29,119,10],[185,30,119,28,"newCoordinate"],[185,43,119,10],[185,45,119,43,"start"],[185,50,119,10],[186,0,120,9],[188,0,122,8],[188,10,122,8],[188,16,122,12],[188,17,122,13,"setState"],[188,25,122,8],[188,26,122,22],[189,0,123,10,"latitude"],[189,12,123,10,"latitude"],[189,20,123,18],[189,22,123,10,"latitude"],[189,30,122,22],[190,0,124,10,"longitude"],[190,12,124,10,"longitude"],[190,21,124,19],[190,23,124,10,"longitude"],[190,32,122,22],[191,0,125,10,"routeCoordinates"],[191,12,125,10,"routeCoordinates"],[191,28,125,26],[191,30,125,28,"routeCoordinates"],[191,46,125,44],[191,47,125,45,"concat"],[191,53,125,28],[191,54,125,52],[191,55,125,53,"newCoordinate"],[191,68,125,52],[191,69,125,28],[191,70,122,22],[192,0,126,10,"distanceTravelled"],[192,12,126,10,"distanceTravelled"],[192,29,126,27],[192,31,127,12,"distanceTravelled"],[192,48,127,29],[192,51,127,32],[192,57,127,36],[192,58,127,37,"calcDistance"],[192,70,127,32],[192,71,127,50,"newCoordinate"],[192,84,127,32],[192,85,122,22],[193,0,128,10,"prevLatLng"],[193,12,128,10,"prevLatLng"],[193,22,128,20],[193,24,128,22,"newCoordinate"],[194,0,122,22],[194,11,122,8],[195,0,130,7],[195,9,102,19],[195,11,131,6],[195,21,131,6,"error"],[195,26,131,11],[196,0,131,11],[196,17,131,15,"console"],[196,24,131,22],[196,25,131,23,"log"],[196,28,131,15],[196,29,131,27,"error"],[196,34,131,15],[196,35,131,11],[197,0,131,11],[197,9,102,19],[197,11,132,6],[198,0,132,8,"enableHighAccuracy"],[198,10,132,8,"enableHighAccuracy"],[198,28,132,26],[198,30,132,28],[198,34,132,6],[199,0,132,34,"timeout"],[199,10,132,34,"timeout"],[199,17,132,41],[199,19,132,43],[199,24,132,6],[200,0,132,50,"maximumAge"],[200,10,132,50,"maximumAge"],[200,20,132,60],[200,22,132,62],[201,0,132,6],[201,9,102,19],[201,10,102,4],[202,0,134,3],[205,45,136,25],[206,0,137,4,"navigator"],[206,8,137,4,"navigator"],[206,17,137,13],[206,18,137,14,"geolocation"],[206,29,137,4],[206,30,137,26,"clearWatch"],[206,40,137,4],[206,41,137,37],[206,46,137,42,"watchID"],[206,53,137,4],[207,0,138,3],[210,31,152,11],[211,0,152,11],[213,0,153,4],[213,12,153,8,"marker"],[213,18,153,14],[213,21,153,17],[213,25,153,4],[215,0,154,4],[215,12,154,8],[215,17,154,13,"state"],[215,22,154,8],[215,23,154,19,"locationChosen"],[215,37,154,4],[215,39,154,35],[216,0,155,6,"marker"],[216,10,155,6,"marker"],[216,16,155,12],[216,19,155,15],[216,48,155,16],[216,72,155,15],[216,73,155,24],[216,79,155,15],[217,0,155,31],[217,12,155,31],[217,22,155,41],[217,24,155,43],[217,29,155,48,"state"],[217,34,155,43],[217,35,155,54,"focusedLocation"],[217,50,155,15],[218,0,155,15],[219,0,155,15],[220,0,155,15],[221,0,155,15],[222,0,155,15],[222,12,155,6],[223,0,156,5],[225,0,157,4],[225,15,158,6],[225,44,158,7],[225,61,158,6],[226,0,158,12],[226,10,158,12],[226,15,158,17],[226,17,158,19,"styles"],[226,23,158,25],[226,24,158,26,"container"],[226,33,158,6],[227,0,158,6],[228,0,158,6],[229,0,158,6],[230,0,158,6],[231,0,158,6],[231,11,159,8],[231,40,159,9],[231,64,159,8],[232,0,160,10],[232,10,160,10],[232,15,160,15],[232,17,160,17,"styles"],[232,23,160,23],[232,24,160,24,"map"],[232,27,159,8],[233,0,161,10],[233,10,161,10],[233,26,161,26],[233,32,159,8],[234,0,162,10],[234,10,162,10],[234,28,162,28],[234,34,159,8],[235,0,163,10],[235,10,163,10],[235,24,163,24],[235,30,159,8],[236,0,164,10],[236,10,164,10],[236,16,164,16],[236,18,164,18],[236,23,164,23,"getMapRegion"],[236,35,164,18],[236,37,159,8],[237,0,159,8],[238,0,159,8],[239,0,159,8],[240,0,159,8],[241,0,159,8],[241,11,166,10],[241,40,166,11],[241,65,166,10],[242,0,166,20],[242,10,166,20],[242,21,166,31],[242,23,166,33],[242,28,166,38,"state"],[242,33,166,33],[242,34,166,44,"routeCoordinates"],[242,50,166,10],[243,0,166,62],[243,10,166,62],[243,21,166,73],[243,23,166,75],[243,24,166,10],[244,0,166,10],[245,0,166,10],[246,0,166,10],[247,0,166,10],[248,0,166,10],[248,10,159,8],[248,12,167,10],[248,41,167,11],[248,64,167,10],[248,65,167,18],[248,73,167,10],[249,0,168,12],[249,10,168,12],[249,13,168,15],[249,15,168,17],[249,28,168,17,"marker"],[249,34,168,23],[249,36,168,27],[250,0,169,14],[250,12,169,14],[250,18,169,18],[250,19,169,19,"marker"],[250,25,169,14],[250,28,169,28,"marker"],[250,34,169,14],[251,0,170,13],[251,11,167,10],[252,0,171,12],[252,10,171,12],[252,20,171,22],[252,22,171,24],[252,27,171,29,"state"],[252,32,171,24],[252,33,171,35,"coordinate"],[252,43,167,10],[253,0,167,10],[254,0,167,10],[255,0,167,10],[256,0,167,10],[257,0,167,10],[257,10,159,8],[257,11,158,6],[257,13,174,8],[257,42,174,9],[257,59,174,8],[258,0,174,14],[258,10,174,14],[258,15,174,19],[258,17,174,21,"styles"],[258,23,174,27],[258,24,174,28,"buttonContainer"],[258,39,174,8],[259,0,174,8],[260,0,174,8],[261,0,174,8],[262,0,174,8],[263,0,174,8],[263,11,175,10],[263,40,175,11],[263,69,175,10],[264,0,175,28],[264,10,175,28],[264,15,175,33],[264,17,175,35],[264,18,175,36,"styles"],[264,24,175,42],[264,25,175,43,"bubble"],[264,31,175,35],[264,33,175,51,"styles"],[264,39,175,57],[264,40,175,58,"button"],[264,46,175,35],[264,47,175,10],[265,0,175,10],[266,0,175,10],[267,0,175,10],[268,0,175,10],[269,0,175,10],[269,11,176,12],[269,40,176,13],[269,57,176,12],[270,0,176,18],[270,10,176,18],[270,15,176,23],[270,17,176,25,"styles"],[270,23,176,31],[270,24,176,32,"bottomBarContent"],[270,40,176,12],[271,0,176,12],[272,0,176,12],[273,0,176,12],[274,0,176,12],[275,0,176,12],[275,11,177,15,"parseFloat"],[275,21,177,25],[275,22,177,26],[275,27,177,31,"state"],[275,32,177,26],[275,33,177,37,"distanceTravelled"],[275,50,177,25],[275,51,177,15],[275,52,177,56,"toFixed"],[275,59,177,15],[275,60,177,64],[275,61,177,15],[275,62,176,12],[275,70,175,10],[275,71,174,8],[275,72,158,6],[275,73,157,4],[276,0,183,3],[279,4,18,30,"React"],[279,19,18,36,"Component"],[279,28],[283,0,186,0],[283,6,186,6,"styles"],[283,12,186,12],[283,15,186,15,"StyleSheet"],[283,39,186,26,"create"],[283,45,186,15],[283,46,186,33],[284,0,187,2,"container"],[284,4,187,2,"container"],[284,13,187,11],[284,47,188,7,"StyleSheet"],[284,71,188,18,"absoluteFillObject"],[284,89,187,11],[285,0,189,4,"justifyContent"],[285,6,189,4,"justifyContent"],[285,20,189,18],[285,22,189,20],[285,32,187,11],[286,0,190,4,"alignItems"],[286,6,190,4,"alignItems"],[286,16,190,14],[286,18,190,16],[287,0,187,11],[287,6,186,33],[288,0,192,2,"map"],[288,4,192,2,"map"],[288,7,192,5],[288,41,193,7,"StyleSheet"],[288,65,193,18,"absoluteFillObject"],[288,83,192,5],[288,84,186,33],[289,0,195,2,"bubble"],[289,4,195,2,"bubble"],[289,10,195,8],[289,12,195,10],[290,0,196,4,"flex"],[290,6,196,4,"flex"],[290,10,196,8],[290,12,196,10],[290,13,195,10],[291,0,197,4,"backgroundColor"],[291,6,197,4,"backgroundColor"],[291,21,197,19],[291,23,197,21],[291,46,195,10],[292,0,198,4,"paddingHorizontal"],[292,6,198,4,"paddingHorizontal"],[292,23,198,21],[292,25,198,23],[292,27,195,10],[293,0,199,4,"paddingVertical"],[293,6,199,4,"paddingVertical"],[293,21,199,19],[293,23,199,21],[293,25,195,10],[294,0,200,4,"borderRadius"],[294,6,200,4,"borderRadius"],[294,18,200,16],[294,20,200,18],[295,0,195,10],[295,5,186,33],[296,0,202,2,"latlng"],[296,4,202,2,"latlng"],[296,10,202,8],[296,12,202,10],[297,0,203,4,"width"],[297,6,203,4,"width"],[297,11,203,9],[297,13,203,11],[297,16,202,10],[298,0,204,4,"alignItems"],[298,6,204,4,"alignItems"],[298,16,204,14],[298,18,204,16],[299,0,202,10],[299,5,186,33],[300,0,206,2,"button"],[300,4,206,2,"button"],[300,10,206,8],[300,12,206,10],[301,0,207,4,"width"],[301,6,207,4,"width"],[301,11,207,9],[301,13,207,11],[301,15,206,10],[302,0,208,4,"paddingHorizontal"],[302,6,208,4,"paddingHorizontal"],[302,23,208,21],[302,25,208,23],[302,27,206,10],[303,0,209,4,"alignItems"],[303,6,209,4,"alignItems"],[303,16,209,14],[303,18,209,16],[303,26,206,10],[304,0,210,4,"marginHorizontal"],[304,6,210,4,"marginHorizontal"],[304,22,210,20],[304,24,210,22],[305,0,206,10],[305,5,186,33],[306,0,212,2,"buttonContainer"],[306,4,212,2,"buttonContainer"],[306,19,212,17],[306,21,212,19],[307,0,213,4,"flexDirection"],[307,6,213,4,"flexDirection"],[307,19,213,17],[307,21,213,19],[307,26,212,19],[308,0,214,4,"marginVertical"],[308,6,214,4,"marginVertical"],[308,20,214,18],[308,22,214,20],[308,24,212,19],[309,0,215,4,"backgroundColor"],[309,6,215,4,"backgroundColor"],[309,21,215,19],[309,23,215,21],[310,0,212,19],[311,0,186,33],[311,3,186,15],[311,4,186,0],[313,18,219,15,"AnimatedMarkers"],[313,33]]},"type":"js/module"}]}